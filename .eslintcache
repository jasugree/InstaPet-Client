[{"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js":"1","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js":"2","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx":"3","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx":"4","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx":"5","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx":"6","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx":"7","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx":"8","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx":"9","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx":"10","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx":"11","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx":"12","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx":"13"},{"size":565,"mtime":1631227282310,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1630414375750,"results":"16","hashOfConfig":"15"},{"size":1090,"mtime":1631680054918,"results":"17","hashOfConfig":"15"},{"size":1878,"mtime":1631680054926,"results":"18","hashOfConfig":"15"},{"size":510,"mtime":1631227512027,"results":"19","hashOfConfig":"15"},{"size":2061,"mtime":1631651452839,"results":"20","hashOfConfig":"15"},{"size":3258,"mtime":1631651798059,"results":"21","hashOfConfig":"15"},{"size":2115,"mtime":1631680054921,"results":"22","hashOfConfig":"15"},{"size":2676,"mtime":1631308955133,"results":"23","hashOfConfig":"15"},{"size":1316,"mtime":1631227600913,"results":"24","hashOfConfig":"15"},{"size":2375,"mtime":1631680054922,"results":"25","hashOfConfig":"15"},{"size":1522,"mtime":1631637373126,"results":"26","hashOfConfig":"15"},{"size":2352,"mtime":1631680054928,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"i3sdrs",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js",[],["62","63"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx",["64","65","66","67","68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport Sitebar from \"../navbar/Navbar\";\r\nimport PostFeed from \"./PostFeed\";\r\nimport PostCreate from \"./PostCreate\";\r\nimport UserFeed from \"./UserFeed\";\r\n\r\nconst PostIndex = (props) => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const [mine, setMine] = useState(null);\r\n\r\n  const fetchMine = () => {\r\n    fetch(\"http://localhost:3001/post/mine\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((feedData) => {\r\n        setMine(feedData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMine();\r\n  }, []);\r\n\r\n\r\n\r\n  const fetchPosts = () => {\r\n    fetch(\"http://localhost:3001/post\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((feedData) => {\r\n        setPosts(feedData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  const fetchUsers = () => {\r\n    fetch(\"http://localhost:3001/user\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((UserData) => {\r\n        setUsers(UserData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\nconsole.log(posts)\r\nconsole.log(users)\r\n  return (\r\n    <div>\r\n      <Sitebar token={props.token} fetchPosts={fetchPosts} posts={posts} users={users} fetchMine={fetchMine} mine={mine} clickLogout={props.clearToken} />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIndex;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx",["73","74"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport BrandLogo from \"../InstaPet-logo.svg\"\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:3001/user/login\", {\r\n      //1\r\n      method: \"POST\",\r\n      body: JSON.stringify({ user: { email: email, password: password } }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        props.updateToken(data.sessionToken);\r\n      }); //ADD CATCH\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n    <div className=\"login-register\">\r\n    <img src={BrandLogo} alt=\"logo\" class=\"auth-logo\" style={{width: 300, margin: \"auto\"}} />\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label htmlFor=\"email\">Email</Label>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            required\r\n            value={email}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label htmlFor=\"password\">Password</Label>\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            value={password}\r\n            required\r\n            type={ toggle == true ? \"password\" : \"text\"}/>\r\n            <i className={ toggle == true ? \"far fa-eye password-icon\" : \"far fa-eye-slash password-icon\" } onClick={() => setToggle(!toggle)}/>\r\n        </FormGroup>\r\n        <Button id=\"auth-login\" type=\"submit\">Login</Button>\r\n      </Form>\r\n      <p className=\"auth-toggle\">Don't have an account? <Link className=\"auth-toggle-link\" to=\"/register\" variant=\"body2\">Sign up</Link></p>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx",["75"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport UploadingProfile from \"../posts/UploadingProfile\";\r\nimport BrandLogo from \"../InstaPet-logo.svg\"\r\n\r\nconst Register = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [profileImage, setprofileImage] = useState('');\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hey there brother\");\r\n    fetch(\"http://localhost:3001/user/create\", {\r\n      //1\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: {\r\n          userName: userName,\r\n          profileImage: profileImage,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          password: password,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        props.updateToken(data.sessionToken);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n    <div className=\"login-register\">\r\n      <img src={BrandLogo} alt=\"logo\" class=\"auth-logo\" style={{width: 300, margin: \"auto\"}} />\r\n      <p className=\"register-intro\">Sign up to see photos from your friends and their pets.</p>\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n              <UploadingProfile setprofileImage={setprofileImage} profileImage={profileImage} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            name=\"firstName\"\r\n            placeholder=\"Username\"\r\n            value={userName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            value={firstName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            value={lastName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password} required\r\n          />\r\n        </FormGroup>\r\n        <Button id=\"auth-login\" type=\"submit\" style={{marginTop: \"5%\"}}>Signup</Button>\r\n      </Form>\r\n      <p className=\"auth-toggle\">Already have an account? <Link  className=\"auth-toggle-link\" to=\"/\" variant=\"body2\">Sign in here</Link>\r\n      </p>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx",["76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\nconst Uploading = (props) => {\r\n  //   const [image, setImage] = useState(\"\");\r\n  const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploading;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx",["78","79","80"],"import React, { useReducer } from 'react';\r\n\r\nconst PostFeed = (props) => {\r\n    console.log(props.users);\r\n    console.log(props.posts);\r\n\r\n    const joinArrays = (userArr, postArr) => {\r\n        if(!userArr || !postArr) return\r\n        return postArr.map(post=>[post, ...userArr.filter(u=>u.id==post.owner)])\r\n      }\r\n\r\n      console.log(joinArrays(props.users, props.posts))\r\n\r\n    const postMapper = () => {\r\n        if(!props.users || !props.posts) return\r\n        return joinArrays(props.users, props.posts).slice(0).reverse().map((post, index) =>{\r\n\r\n            const createdAt = new Date(post[0].createdAt);\r\n            const createdDate = createdAt.toLocaleDateString('en-US');\r\n            const createdTime = createdAt.toLocaleTimeString('en-US')\r\n            \r\n            return(\r\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}> \r\n                <tr key={index}>\r\n                    <div className=\"postContainer\" style={{textAlign: 'left'}}>\r\n                        <div className=\"userHeader\">\r\n                            <img className=\"userProfilePic\" src={post[1].profileImage} alt=\"user\"/>\r\n                            <span className=\"userName\">{post[1].userName}</span>\r\n                        </div>\r\n                        <div className=\"picture\">\r\n                            <img src={post[0].image} alt=\"post image\" />\r\n                        </div>\r\n                <div className=\"postDetails\">\r\n                    <div className=\"timeLike\">\r\n                        <div className=\"time\">\r\n                            {createdDate} at {createdTime}\r\n                        </div>\r\n                        <div className=\"likes\">\r\n                            {post[0].likes}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                    <span className=\"userName-description\">{post[1].userName}</span> {post[0].description}\r\n                    </div>\r\n                    <div className=\"category\">\r\n                        {post[0].category}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </tr>\r\n                </div>\r\n        )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div>\r\n            {postMapper()}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default PostFeed;","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx",["81","82"],"import React, { useState } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\nimport PlaceholderImage from \"../placeholder-profile-pic.png\"\r\n\r\n\r\nconst UploadingProfile = (props) => {\r\n    const [image, setImage] = useState(\"\");\r\n  const { setprofileImage} = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setprofileImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <img id=\"profile-pic\" src={ image == \"\" ? (PlaceholderImage) :(image)} alt=\"\" />\r\n        <FormGroup id=\"uploader\">\r\n        <label for=\"profile-image-upload\" class=\"custom-file-upload\">\r\n          <input \r\n            style={{display: \"none\"}}\r\n            id=\"profile-image-upload\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage} required\r\n          />          Add your Photo\r\n          </label>\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadingProfile;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx",["83","84","85"],"import React, {useEffect} from 'react';\r\n\r\nconst UserFeed = (props) => {\r\n    console.log(props.users);\r\n    console.log(props.mine);\r\n\r\n\r\n    const joinArrays = (userArr, postArr) => {\r\n        if(!userArr || !postArr) return\r\n        return postArr.map(post=>[post, ...userArr.filter(u=>u.id==post.owner)])\r\n      }\r\n\r\n      console.log(joinArrays(props.users, props.posts))\r\n\r\n    const postMapper = () => {\r\n        if(!props.users || !props.mine) return\r\n        return joinArrays(props.users, props.mine).slice(0).reverse().map((post, index) =>{\r\n\r\n            const createdAt = new Date(post[0].createdAt);\r\n            const createdDate = createdAt.toLocaleDateString('en-US');\r\n            const createdTime = createdAt.toLocaleTimeString('en-US')\r\n            \r\n            return(\r\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}> \r\n                <tr key={index}>\r\n                    <div className=\"postContainer\" style={{textAlign: 'left'}}>\r\n                        <div className=\"userHeader\">\r\n                            <img className=\"userProfilePic\" src={post[1].profileImage} alt=\"user\"/>\r\n                            <span className=\"userName\">{post[1].firstName} {post[1].lastName}</span>\r\n                        </div>\r\n                        <div className=\"picture\">\r\n                            <img src={post[0].image} alt=\"post image\" />\r\n                        </div>\r\n                <div className=\"postDetails\">\r\n                    <div className=\"timeLike\">\r\n                        <div className=\"time\">\r\n                            {createdDate} at {createdTime}\r\n                        </div>\r\n                        <div className=\"likes\">\r\n                            {post[0].likes}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        {post[0].description}\r\n                    </div>\r\n                    <div className=\"category\">\r\n                        {post[0].category}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </tr>\r\n              \r\n                </div>\r\n        )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        <div>\r\n            {postMapper()}\r\n        </div>\r\n     );\r\n}\r\n \r\n    \r\nexport default UserFeed;",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":19},{"ruleId":"90","severity":1,"message":"94","line":2,"column":21,"nodeType":"92","messageId":"93","endLine":2,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":2,"column":26,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"90","severity":1,"message":"96","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"97","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":29,"column":6,"nodeType":"101","endLine":29,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":49,"column":6,"nodeType":"101","endLine":49,"endColumn":8,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":68,"column":6,"nodeType":"101","endLine":68,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":49,"column":27,"nodeType":"109","messageId":"110","endLine":49,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":50,"column":35,"nodeType":"109","messageId":"110","endLine":50,"endColumn":37},{"ruleId":"90","severity":1,"message":"111","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":8},{"ruleId":"90","severity":1,"message":"112","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":44,"column":13,"nodeType":"115","endLine":44,"endColumn":59},{"ruleId":"90","severity":1,"message":"116","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":9,"column":66,"nodeType":"109","messageId":"110","endLine":9,"endColumn":68},{"ruleId":"117","severity":1,"message":"118","line":31,"column":29,"nodeType":"115","endLine":31,"endColumn":73},{"ruleId":"90","severity":1,"message":"119","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":35,"column":43,"nodeType":"109","messageId":"110","endLine":35,"endColumn":45},{"ruleId":"90","severity":1,"message":"112","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":10,"column":66,"nodeType":"109","messageId":"110","endLine":10,"endColumn":68},{"ruleId":"117","severity":1,"message":"118","line":32,"column":29,"nodeType":"115","endLine":32,"endColumn":73},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'PostFeed' is defined but never used.","'PostCreate' is defined but never used.","'UserFeed' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMine'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Label' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useReducer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [fetchMine]",{"range":"131","text":"132"},"Update the dependencies array to be: [fetchPosts]",{"range":"133","text":"134"},"Update the dependencies array to be: [fetchUsers]",{"range":"135","text":"136"},[810,812],"[fetchMine]",[1204,1206],"[fetchPosts]",[1596,1598],"[fetchUsers]"]