[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/category/CategorySearch.jsx":"12"},{"size":547,"mtime":1631137475126,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1630855023831,"results":"15","hashOfConfig":"14"},{"size":1045,"mtime":1631285745806,"results":"16","hashOfConfig":"14"},{"size":489,"mtime":1631137250466,"results":"17","hashOfConfig":"14"},{"size":1435,"mtime":1631236613993,"results":"18","hashOfConfig":"14"},{"size":1495,"mtime":1631137564540,"results":"19","hashOfConfig":"14"},{"size":2217,"mtime":1631200060055,"results":"20","hashOfConfig":"14"},{"size":2547,"mtime":1631226682032,"results":"21","hashOfConfig":"14"},{"size":1779,"mtime":1631236613992,"results":"22","hashOfConfig":"14"},{"size":1302,"mtime":1631285988565,"results":"23","hashOfConfig":"14"},{"size":1264,"mtime":1631209889448,"results":"24","hashOfConfig":"14"},{"size":2367,"mtime":1631294201791,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15o3fq",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["54","55"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Sitebar from \"../navbar/Navbar\";\nimport PostFeed from \"./PostFeed\";\nimport PostCreate from \"./PostCreate\";\n\nconst PostIndex = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const fetchPosts = () => {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setPosts(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((UserData) => {\n        setUsers(UserData);\n      });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      <Sitebar token={props.token} clickLogout={props.clearToken} />\n      <Container>\n        <Row>\n          <Col>\n            <PostFeed posts={posts} fetchUsers={fetchUsers} users={users} fetchPosts={fetchPosts} token={props.token}  />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PostIndex;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["59"],"import React, { useReducer } from 'react';\n\nconst PostFeed = (props) => {\n    console.log(props.users);\n    console.log(props.posts);\n    const postMapper = () => {\n        console.log('ignore');\n        return props.posts.slice(0).reverse().map((post, index) =>{\n            return(\n                <div>\n                <tr key={index}>\n                    <div className=\"postContainer\" style={{textAlign: 'left'}}>\n                        <div className=\"userHeader\">\n                            <img src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\" alt=\"user\" style={{width: 50}} />\n                            <span>trash</span>\n                        </div>\n                        <div className=\"picture\">\n                            <img src={post.image} alt=\"fox\" style={{width: 200}} />\n                        </div>\n                    </div>\n                <div className=\"postDetails\">\n                    <div className=\"timeLike\">\n                        <div className=\"time\">\n                            {post.createdAt}\n                        </div>\n                        <div className=\"likes\">\n                            {post.likes}\n                        </div>\n                    </div>\n                    <div className=\"description\">\n                        {post.description}\n                    </div>\n                    <div className=\"category\">\n                        {post.category}\n                    </div>\n                </div>\n                </tr>\n                </div>\n            )\n        })\n    }\n\n\n\n    return ( \n        <div>\n            {postMapper()}\n        </div>\n     );\n}\n \nexport default PostFeed;","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["60","61"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  //   const [image, setImage] = useState(\"\");\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/category/CategorySearch.jsx",["62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":27,"column":6,"nodeType":"75","endLine":27,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":46,"column":6,"nodeType":"75","endLine":46,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":27},{"ruleId":"69","severity":1,"message":"80","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":44,"column":13,"nodeType":"83","endLine":44,"endColumn":59},{"ruleId":"69","severity":1,"message":"84","line":85,"column":10,"nodeType":"71","messageId":"72","endLine":85,"endColumn":13},{"ruleId":"69","severity":1,"message":"85","line":85,"column":15,"nodeType":"71","messageId":"72","endLine":85,"endColumn":31},{"ruleId":"69","severity":1,"message":"86","line":91,"column":9,"nodeType":"71","messageId":"72","endLine":91,"endColumn":26},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["90"],"'useReducer' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ref' is assigned a value but never used.","'isClickedOutside' is assigned a value but never used.","'collapseContainer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [fetchPosts]",{"range":"95","text":"96"},"Update the dependencies array to be: [fetchUsers]",{"range":"97","text":"98"},[699,701],"[fetchPosts]",[1072,1074],"[fetchUsers]"]