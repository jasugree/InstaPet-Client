[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"12","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx":"13","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js":"14","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/LikeButton.jsx":"15","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UserFeed.jsx":"16","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostUpdate.jsx":"17","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostDelete.jsx":"18"},{"size":547,"mtime":1631498826222,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1631498826225,"results":"21","hashOfConfig":"20"},{"size":1160,"mtime":1632180535766,"results":"22","hashOfConfig":"20"},{"size":489,"mtime":1631498826221,"results":"23","hashOfConfig":"20"},{"size":1859,"mtime":1632181316057,"results":"24","hashOfConfig":"20"},{"size":2576,"mtime":1632181242714,"results":"25","hashOfConfig":"20"},{"size":3686,"mtime":1632181252439,"results":"26","hashOfConfig":"20"},{"size":4521,"mtime":1632181304908,"results":"27","hashOfConfig":"20"},{"size":4130,"mtime":1632181285175,"results":"28","hashOfConfig":"20"},{"size":3603,"mtime":1632181258448,"results":"29","hashOfConfig":"20"},{"size":1468,"mtime":1632181358143,"results":"30","hashOfConfig":"20"},{"size":1238,"mtime":1632181352342,"results":"31","hashOfConfig":"20"},{"size":4080,"mtime":1632181346175,"results":"32","hashOfConfig":"20"},{"size":879,"mtime":1632181264585,"results":"33","hashOfConfig":"20"},{"size":666,"mtime":1632181278023,"results":"34","hashOfConfig":"20"},{"size":1859,"mtime":1632181363238,"results":"35","hashOfConfig":"20"},{"size":4394,"mtime":1632181333357,"results":"36","hashOfConfig":"20"},{"size":1161,"mtime":1632181972237,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15o3fq",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["86","87"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\nimport Sitebar from \"../navbar/Navbar\";\n\nconst PostIndex = (props) => {\n  // const [updateActive, setUpdateActive] = useState(false);\n  const [postToUpdate, setPostToUpdate] = useState({});\n\n  const [posts, setPosts] = useState(null);\n  const [users, setUsers] = useState(null);\n  const [mine, setMine] = useState(null);\n\n  const fetchMine = () => {\n    fetch(\"http://localhost:3001/post/mine\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setMine(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchMine();\n  }, []);\n\n  const fetchPosts = () => {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setPosts(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, [props.token]);\n\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((UserData) => {\n        setUsers(UserData);\n      });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  console.log(posts);\n  console.log(users);\n  return (\n    <div>\n      <Sitebar\n        token={props.token}\n        fetchPosts={fetchPosts}\n        setPosts={setPosts}\n        posts={posts}\n        users={users}\n        fetchMine={fetchMine}\n        mine={mine}\n        clickLogout={props.clearToken}\n      />\n    </div>\n  );\n};\n\nexport default PostIndex;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",["93","94"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport BrandLogo from \"../InstaPet-logo.svg\";\n\nconst Login = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3001/user/login\", {\n      //1\n      method: \"POST\",\n      body: JSON.stringify({ user: { email: email, password: password } }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        history.push(\"/home\");\n        console.log(\"RIGH HERE\");\n        console.log(data);\n        props.updateToken(data.sessionToken);\n        localStorage.setItem(\"profileImage\", data.user.profileImage);\n        localStorage.setItem(\"userName\", data.user.userName);\n      }); //ADD CATCH\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"login-register\">\n        <img\n          src={BrandLogo}\n          alt=\"logo\"\n          class=\"auth-logo\"\n          style={{ width: 300, margin: \"auto\" }}\n        />\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              name=\"email\"\n              required\n              value={email}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              onChange={(e) => setPassword(e.target.value)}\n              name=\"password\"\n              value={password}\n              required\n              type={toggle == true ? \"password\" : \"text\"}\n            />\n            <i\n              className={\n                toggle == true\n                  ? \"far fa-eye password-icon\"\n                  : \"far fa-eye-slash password-icon\"\n              }\n              onClick={() => setToggle(!toggle)}\n            />\n          </FormGroup>\n          <Button id=\"auth-login\" type=\"submit\">\n            Login\n          </Button>\n        </Form>\n        <p className=\"auth-toggle\">\n          Don't have an account?{\" \"}\n          <Link className=\"auth-toggle-link\" to=\"/register\" variant=\"body2\">\n            Sign up\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",["95"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport UploadingProfile from \"../posts/UploadingProfile\";\nimport BrandLogo from \"../InstaPet-logo.svg\";\n\nconst Register = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [profileImage, setprofileImage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"hey there brother\");\n    fetch(\"http://localhost:3001/user/create\", {\n      //1\n      method: \"POST\",\n      body: JSON.stringify({\n        user: {\n          userName: userName,\n          profileImage: profileImage,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        history.push(\"/home\");\n        props.updateToken(data.sessionToken);\n        localStorage.setItem(\"profileImage\", profileImage);\n        localStorage.setItem(\"userName\", userName);\n      });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"login-register\">\n        <img\n          src={BrandLogo}\n          alt=\"logo\"\n          class=\"auth-logo\"\n          style={{ width: 300, margin: \"auto\" }}\n        />\n        <p className=\"register-intro\">\n          Sign up to see photos from your friends and their pets.\n        </p>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <UploadingProfile\n              setprofileImage={setprofileImage}\n              profileImage={profileImage}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              onChange={(e) => setUserName(e.target.value)}\n              name=\"firstName\"\n              placeholder=\"Username\"\n              value={userName}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              onChange={(e) => setFirstName(e.target.value)}\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              value={firstName}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              onChange={(e) => setLastName(e.target.value)}\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              value={lastName}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              required\n            />\n          </FormGroup>\n          <FormGroup>\n            <Input\n              onChange={(e) => setPassword(e.target.value)}\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              required\n            />\n          </FormGroup>\n          <Button id=\"auth-login\" type=\"submit\" style={{ marginTop: \"5%\" }}>\n            Signup\n          </Button>\n        </Form>\n        <p className=\"auth-toggle\">\n          Already have an account?{\" \"}\n          <Link className=\"auth-toggle-link\" to=\"/\" variant=\"body2\">\n            Sign in here\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["96","97","98","99","100","101","102","103","104","105","106"],"import React, { useReducer, useState } from \"react\";\nimport PostUpdate from \"./PostUpdate\";\nimport PostDelete from \"./PostDelete\";\nimport LikeButton from \"./LikeButton\";\nimport {\n  Button,\n  ButtonDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n} from \"reactstrap\";\nimport Search from \"./Search\";\n\nconst PostFeed = (props) => {\n  console.log(props.users);\n  console.log(props.posts);\n  console.log(props.token);\n\n  const [dropdownOpen, setOpen] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const toggle = () => setOpen(!dropdownOpen);\n\n  const profileImage = localStorage.getItem(\"profileImage\");\n\n  const joinArrays = (userArr, postArr) => {\n    if (!userArr || !postArr) return;\n    return postArr.map((post) => [\n      post,\n      ...userArr.filter((u) => u.id == post.owner),\n    ]);\n  };\n\n  console.log(joinArrays(props.users, props.posts));\n\n  const postMapper = () => {\n    if (!props.users || !props.posts) return;\n    return joinArrays(props.users, props.posts)\n      .sort((a, b) => a[0].id - b[0].id)\n      .reverse()\n      .map((post, index) => {\n        const createdAt = new Date(post[0].createdAt);\n        const createdDate = createdAt.toLocaleDateString(\"en-US\");\n        const createdTime = createdAt.toLocaleTimeString([], {\n          timeStyle: \"short\",\n        });\n\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <tr key={index}>\n              <div className=\"postContainer\" style={{ textAlign: \"left\" }}>\n                <div className=\"userHeader\">\n                  <img\n                    className=\"userProfilePic\"\n                    src={post[1].profileImage}\n                    alt=\"user\"\n                  />\n                  <span className=\"userName\">{post[1].userName}</span>\n                </div>\n                <div className=\"picture\">\n                  <img src={post[0].image} alt=\"post image\" />\n                </div>\n                <div className=\"postActions\">\n                  <div className=\"like\">\n                    <LikeButton />\n                  </div>\n                  <div\n                    className=\"delete\"\n                    style={{\n                      display:\n                        post[1].profileImage === profileImage\n                          ? \"block\"\n                          : \"none\",\n                    }}\n                  >\n                    <PostDelete\n                      style={{ marginLeft: \"auto\" }}\n                      post={post[0]}\n                      token={props.token}\n                      fetchPosts={props.fetchPosts}\n                      fetchMine={props.fetchMine}\n                    />\n                  </div>\n                  <div\n                    className=\"edit\"\n                    style={{\n                      display:\n                        post[1].profileImage === profileImage\n                          ? \"block\"\n                          : \"none\",\n                    }}\n                  >\n                    <PostUpdate\n                      post={post[0]}\n                      token={props.token}\n                      fetchPosts={props.fetchPosts}\n                      fetchMine={props.fetchMine}\n                    />\n                  </div>\n                </div>\n                <div className=\"postDetails\">\n                  <hr style={{ marginTop: \"0em\" }} />\n                  <div className=\"description\">\n                    <span className=\"userName-description\">\n                      {post[1].userName}\n                    </span>{\" \"}\n                    {post[0].description}\n                  </div>\n                  <div className=\"postMeta\">\n                    <div className=\"category\">{post[0].category}</div>\n                    <div className=\"dot\">{\"•\"}</div>\n                    <div className=\"time\">\n                      {createdDate} at {createdTime}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </tr>\n          </div>\n        );\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"filter\">\n        <Search\n          style={{ maxWidth: 200 }}\n          token={props.token}\n          fetchPosts={props.fetchPosts}\n          fetchMine={props.fetchMine}\n          setPosts={props.setPosts}\n        />\n      </div>\n      {postMapper()}\n    </div>\n  );\n};\n\nexport default PostFeed;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",["107"],"import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Collapse,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Button,\n} from \"reactstrap\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport PostCreate from \"../posts/PostCreate\";\nimport BrandLogo from \"../InstaPet-logo.svg\";\nimport UserFeed from \"../posts/UserFeed\";\nimport PostFeed from \"../posts/PostFeed\";\nimport Search from \"../posts/Search\";\n\nconst Sitebar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props);\n  const toggle = () => {\n    let newIsOpen = !isOpen;\n    setIsOpen(newIsOpen);\n  };\n\n  const profileImage = localStorage.getItem(\"profileImage\");\n\n  return (\n    <Router>\n      <Navbar fixed={\"top\"} color=\"faded\" light expand=\"md\">\n        <NavbarBrand href=\"/home\">\n          <img src={BrandLogo} alt=\"logo\" style={{ width: 200 }} />\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto center-option\" navbar>\n            <NavItem>\n              <PostCreate\n                className=\"nav-button\"\n                fetchMine={props.fetchMine}\n                fetchPosts={props.fetchPosts}\n                token={props.token}\n              />\n            </NavItem>\n          </Nav>\n          <Nav className=\"ml-auto right-options\" navbar>\n            <NavItem className=\"nav-right\">\n              <Button\n                href=\"/home\"\n                color=\"primary\"\n                className=\"nav-button\"\n                style={{ color: \"#0086c3\", backgroundColor: \"#ffffff\" }}\n              >\n                <i className=\"fas fa-home\"></i>\n              </Button>\n            </NavItem>\n            <NavItem className=\"nav-right\">\n              <Link to=\"/\">\n                <Button\n                  className=\"nav-button\"\n                  color=\"primary\"\n                  onClick={props.clickLogout}\n                  style={{ color: \"#0086c3\", backgroundColor: \"#ffffff\" }}\n                >\n                  <i className=\"fas fa-sign-out-alt\"></i>\n                </Button>\n              </Link>\n            </NavItem>\n            <NavItem className=\"nav-right\">\n              <Link to=\"/post/mine\">\n                <Button\n                  className=\"UserFeed\"\n                  onClick={props.fetchPosts}\n                  style={{ backgroundImage: `url(${profileImage})` }}\n                ></Button>\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n\n      <Container>\n        <Row>\n          <Col>\n            <Switch>\n              <Route exact path=\"/home\">\n                <PostFeed\n                  posts={props.posts}\n                  fetchUsers={props.fetchUsers}\n                  users={props.users}\n                  fetchMine={props.fetchMine}\n                  fetchPosts={props.fetchPosts}\n                  setPosts={props.setPosts}\n                  token={props.token}\n                />\n              </Route>\n              <Route exact path=\"/post/mine\">\n                <UserFeed\n                  fetchMine={props.fetchMine}\n                  mine={props.mine}\n                  posts={props.posts}\n                  fetchUsers={props.fetchUsers}\n                  users={props.users}\n                  fetchPosts={props.fetchPosts}\n                  token={props.token}\n                />\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n};\n\nexport default Sitebar;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx",["108","109","110"],"import React, { useState } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\nimport PlaceholderImage from \"../placeholder-profile-pic.png\";\n\nconst UploadingProfile = (props) => {\n  const [image, setImage] = useState(\"\");\n  const { setprofileImage } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setprofileImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <img\n        id=\"profile-pic\"\n        src={image == \"\" ? PlaceholderImage : image}\n        alt=\"\"\n      />\n      <FormGroup id=\"uploader\">\n        <label for=\"profile-image-upload\" class=\"custom-file-upload\">\n          <input\n            style={{ display: \"none\" }}\n            id=\"profile-image-upload\"\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n            required\n          />{\" \"}\n          Add your Photo\n        </label>\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default UploadingProfile;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["111","112"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            required\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx",["113"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport {\n  AWESOME_AARDVARK,\n  COOL_CAT,\n  DARLING_DOGGO,\n  DELIGHTFUL_DOLPHIN,\n  FANTASTIC_FROG,\n  FIESTY_FOX,\n  HAPPY_HEDGEHOG,\n  LOVABLE_LLAMA,\n  NIFTY_NARWHAL,\n  PERFECT_PARROT,\n  PRETTY_PENGUIN,\n  PURPOSEFUL_PORPOISE,\n  ROCKIN_RABBIT,\n  SASSY_SLOTH,\n  SILLY_SHARK,\n  SLIPPERY_SNAKE,\n  SUPER_SEAL,\n  TUBULAR_TURTLE,\n  ZESTY_ZEBRA,\n} from \"./category.constants\";\n\nconst Search = (props) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const handleFetch = (category) => {\n    fetch(`http://localhost:3001/post/${category}`, {\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        props.setPosts(data);\n      });\n  };\n\n  return (\n    <div className=\"search-dropdown\">\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle id=\"search-button\" caret>\n          Search by Category\n        </DropdownToggle>\n        <DropdownMenu\n          modifiers={{\n            setMaxHeight: {\n              enabled: true,\n              order: 890,\n              fn: (data) => {\n                return {\n                  ...data,\n                  styles: {\n                    ...data.styles,\n                    overflow: \"auto\",\n                    maxHeight: \"200px\",\n                  },\n                };\n              },\n            },\n          }}\n        >\n          <DropdownItem onClick={() => handleFetch(AWESOME_AARDVARK)}>\n            {AWESOME_AARDVARK}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(COOL_CAT)}>\n            {COOL_CAT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(DARLING_DOGGO)}>\n            {DARLING_DOGGO}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(DELIGHTFUL_DOLPHIN)}>\n            {DELIGHTFUL_DOLPHIN}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(FANTASTIC_FROG)}>\n            {FANTASTIC_FROG}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(FIESTY_FOX)}>\n            {FIESTY_FOX}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(HAPPY_HEDGEHOG)}>\n            {HAPPY_HEDGEHOG}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(LOVABLE_LLAMA)}>\n            {LOVABLE_LLAMA}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(NIFTY_NARWHAL)}>\n            {NIFTY_NARWHAL}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PERFECT_PARROT)}>\n            {PERFECT_PARROT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PRETTY_PENGUIN)}>\n            {PRETTY_PENGUIN}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PURPOSEFUL_PORPOISE)}>\n            {PURPOSEFUL_PORPOISE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(ROCKIN_RABBIT)}>\n            {ROCKIN_RABBIT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SASSY_SLOTH)}>\n            {SASSY_SLOTH}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SILLY_SHARK)}>\n            {SILLY_SHARK}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SLIPPERY_SNAKE)}>\n            {SLIPPERY_SNAKE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SUPER_SEAL)}>\n            {SUPER_SEAL}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(TUBULAR_TURTLE)}>\n            {TUBULAR_TURTLE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(ZESTY_ZEBRA)}>\n            {ZESTY_ZEBRA}\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/LikeButton.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UserFeed.jsx",["114","115","116","117","118","119"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n// // const [profileImage, setProfileImage] = useState(localStorage.getItem('profileImage'));\n// // const [userName, setUserName] = useState(localStorage.getItem('userName'));\n// const profileImage = localStorage.getItem('profileImage');\n// const userName = localStorage.getItem('userName');\n\n// // useEffect(() =>{\n// //     setProfileImage()\n// // })\nconst UserFeed = (props) => {\n  const profileImage = localStorage.getItem(\"profileImage\");\n  const userName = localStorage.getItem(\"userName\");\n  console.log(props.users);\n  console.log(props.mine);\n  const joinArrays = (userArr, postArr) => {\n    if (!userArr || !postArr) return;\n    return postArr.map((post) => [\n      post,\n      ...userArr.filter((u) => u.id == post.owner),\n    ]);\n  };\n  console.log(joinArrays(props.users, props.posts));\n  const postMapper = () => {\n    if (!props.users || !props.mine) return;\n    return joinArrays(props.users, props.mine)\n      .slice(0)\n      .reverse()\n      .map((post, index) => {\n        const createdAt = new Date(post[0].createdAt);\n        const createdDate = createdAt.toLocaleDateString(\"en-US\");\n        const createdTime = createdAt.toLocaleTimeString(\"en-US\");\n        return (\n          <Col xs={4}>\n            {\" \"}\n            <img src={post[0].image} alt=\"post image\" />\n          </Col>\n        );\n      });\n  };\n\n  return (\n    <div>\n      <div id=\"header\">\n        <div className=\"nameAndProfile\">\n          <img className=\"userFeedProfilePic\" src={profileImage} alt=\"user\" />\n          <span className=\"userFeedName userName\">{userName}</span>\n        </div>\n        <hr />\n        <Container style={{ paddingTop: 20 }}>\n          <Row>{postMapper()}</Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default UserFeed;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostUpdate.jsx",["120","121"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Modal,\n  FormGroup,\n  Label,\n  Input,\n  ModalBody,\n  ModalHeader,\n  DropdownItem,\n} from \"reactstrap\";\nimport {\n  AWESOME_AARDVARK,\n  COOL_CAT,\n  DARLING_DOGGO,\n  DELIGHTFUL_DOLPHIN,\n  FANTASTIC_FROG,\n  FIESTY_FOX,\n  HAPPY_HEDGEHOG,\n  LOVABLE_LLAMA,\n  NIFTY_NARWHAL,\n  PERFECT_PARROT,\n  PRETTY_PENGUIN,\n  PURPOSEFUL_PORPOISE,\n  ROCKIN_RABBIT,\n  SASSY_SLOTH,\n  SILLY_SHARK,\n  SLIPPERY_SNAKE,\n  SUPER_SEAL,\n  TUBULAR_TURTLE,\n  ZESTY_ZEBRA,\n} from \"./category.constants.js\";\nimport Uploading from \"./Uploading\";\n\nlet e;\nconst PostUpdate = (props) => {\n  const [editImage, setEditImage] = useState(props.post.image);\n  const [editDesc, setEditDesc] = useState(props.post.description);\n  const [editCat, setEditCat] = useState(props.post.category);\n  const [editLike, setEditLike] = useState(props.post.like);\n  const [modal, setModal] = useState(props.modal);\n  //  const {modal, setModal} = props\n  const toggle = () => {\n    setModal(!modal);\n  };\n  console.log(\"hello!!\");\n  console.log(props.post);\n\n  useEffect(() => {\n    setEditDesc(props.post.description);\n    setEditCat(props.post.category);\n  }, [props.post]);\n\n  const postUpdate = (e, post) => {\n    e.preventDefault();\n    console.log(\"Test, test\");\n\n    fetch(`http://localhost:3001/post/update/${post.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        post: {\n          image: editImage,\n          description: editDesc,\n          category: editCat,\n          likes: editLike,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((logData) => {\n        props.fetchMine();\n        props.fetchPosts();\n        console.log(logData);\n        setEditDesc(\"\");\n        setEditCat(\"\");\n        setEditImage(editImage);\n        setEditLike(editLike);\n        toggle();\n        props.setPosts(logData);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n  return (\n    <div>\n      <Button\n        style={{\n          color: \"#0086c3\",\n          backgroundColor: \"transparent\",\n          border: 0,\n          fontSize: 24,\n          padding: 0,\n        }}\n        size=\"sm\"\n        onClick={toggle}\n      >\n        <i class=\"far fa-edit\"></i>\n      </Button>\n      <Modal isOpen={modal}>\n        <ModalHeader toggle={toggle}>Update Your Post</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={() => postUpdate(e, props.post)}>\n            <FormGroup>\n              <Label htmlFor=\"description\">Description</Label>\n              <Input\n                name=\"description\"\n                value={editDesc}\n                onChange={(e) => setEditDesc(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"category\">Category</Label>\n              <Input\n                type=\"select\"\n                name=\"category\"\n                value={editCat}\n                required\n                onChange={(e) => setEditCat(e.target.value)}\n              >\n                <option>{AWESOME_AARDVARK}</option>\n                <option>{COOL_CAT}</option>\n                <option>{DARLING_DOGGO}</option>\n                <option>{DELIGHTFUL_DOLPHIN}</option>\n                <option>{FANTASTIC_FROG}</option>\n                <option>{FIESTY_FOX}</option>\n                <option>{HAPPY_HEDGEHOG}</option>\n                <option>{LOVABLE_LLAMA}</option>\n                <option>{NIFTY_NARWHAL}</option>\n                <option>{PERFECT_PARROT}</option>\n                <option>{PRETTY_PENGUIN}</option>\n                <option>{PURPOSEFUL_PORPOISE}</option>\n                <option>{ROCKIN_RABBIT}</option>\n                <option>{SASSY_SLOTH}</option>\n                <option>{SILLY_SHARK}</option>\n                <option>{SLIPPERY_SNAKE}</option>\n                <option>{SUPER_SEAL}</option>\n                <option>{TUBULAR_TURTLE}</option>\n                <option>{ZESTY_ZEBRA}</option>\n              </Input>\n            </FormGroup>\n\n            <Button\n              style={{ color: \"white\", backgroundColor: \"#0086c3\" }}\n              type=\"submit\"\n            >\n              Update\n            </Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PostUpdate;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostDelete.jsx",["122"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  DropdownItem,\n} from \"reactstrap\";\n\nconst PostDelete = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  const deletePost = (posts) => {\n    fetch(`http://localhost:3001/post/delete/${props.post.id}`, {\n      method: \"DELETE\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    }).then(() => {\n      props.fetchPosts();\n      props.fetchMine();\n      toggle();\n    });\n  };\n\n  return (\n    <div>\n      <Button\n        style={{\n          color: \"#0086c3\",\n          backgroundColor: \"transparent\",\n          border: 0,\n          fontSize: 24,\n          padding: 0,\n        }}\n        size=\"sm\"\n        onClick={toggle}\n      >\n        <i class=\"far fa-trash-alt\"></i>\n      </Button>\n      <Modal isOpen={modal}>\n        <ModalHeader toggle={toggle}>Delete Your Post</ModalHeader>\n        <ModalBody>\n          <Button onClick={deletePost}>Delete</Button>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PostDelete;\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":22},{"ruleId":"127","severity":1,"message":"131","line":6,"column":24,"nodeType":"129","messageId":"130","endLine":6,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":28,"column":6,"nodeType":"134","endLine":28,"endColumn":8,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":46,"column":6,"nodeType":"134","endLine":46,"endColumn":19,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"138","line":64,"column":6,"nodeType":"134","endLine":64,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":61,"column":28,"nodeType":"142","messageId":"143","endLine":61,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":65,"column":24,"nodeType":"142","messageId":"143","endLine":65,"endColumn":26},{"ruleId":"127","severity":1,"message":"144","line":3,"column":35,"nodeType":"129","messageId":"130","endLine":3,"endColumn":40},{"ruleId":"127","severity":1,"message":"145","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"146","line":6,"column":3,"nodeType":"129","messageId":"130","endLine":6,"endColumn":9},{"ruleId":"127","severity":1,"message":"147","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":17},{"ruleId":"127","severity":1,"message":"148","line":8,"column":3,"nodeType":"129","messageId":"130","endLine":8,"endColumn":15},{"ruleId":"127","severity":1,"message":"149","line":9,"column":3,"nodeType":"129","messageId":"130","endLine":9,"endColumn":15},{"ruleId":"127","severity":1,"message":"150","line":10,"column":3,"nodeType":"129","messageId":"130","endLine":10,"endColumn":17},{"ruleId":"127","severity":1,"message":"151","line":20,"column":10,"nodeType":"129","messageId":"130","endLine":20,"endColumn":25},{"ruleId":"127","severity":1,"message":"152","line":20,"column":27,"nodeType":"129","messageId":"130","endLine":20,"endColumn":45},{"ruleId":"127","severity":1,"message":"153","line":21,"column":9,"nodeType":"129","messageId":"130","endLine":21,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":29,"column":37,"nodeType":"142","messageId":"143","endLine":29,"endColumn":39},{"ruleId":"154","severity":1,"message":"155","line":66,"column":19,"nodeType":"156","endLine":66,"endColumn":63},{"ruleId":"127","severity":1,"message":"157","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"158","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":19},{"ruleId":"127","severity":1,"message":"159","line":8,"column":10,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":35,"column":20,"nodeType":"142","messageId":"143","endLine":35,"endColumn":22},{"ruleId":"127","severity":1,"message":"160","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":44,"column":13,"nodeType":"156","endLine":44,"endColumn":59},{"ruleId":"127","severity":1,"message":"160","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"160","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"163","line":1,"column":28,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":20,"column":37,"nodeType":"142","messageId":"143","endLine":20,"endColumn":39},{"ruleId":"127","severity":1,"message":"164","line":31,"column":15,"nodeType":"129","messageId":"130","endLine":31,"endColumn":26},{"ruleId":"127","severity":1,"message":"165","line":32,"column":15,"nodeType":"129","messageId":"130","endLine":32,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":36,"column":13,"nodeType":"156","endLine":36,"endColumn":57},{"ruleId":"127","severity":1,"message":"148","line":11,"column":3,"nodeType":"129","messageId":"130","endLine":11,"endColumn":15},{"ruleId":"127","severity":1,"message":"166","line":34,"column":8,"nodeType":"129","messageId":"130","endLine":34,"endColumn":17},{"ruleId":"127","severity":1,"message":"148","line":7,"column":3,"nodeType":"129","messageId":"130","endLine":7,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'postToUpdate' is assigned a value but never used.","Identifier","unusedVar","'setPostToUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMine'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["171"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Label' is defined but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","'ButtonDropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'showUpdateModal' is assigned a value but never used.","'setShowUpdateModal' is assigned a value but never used.","'toggle' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Search' is defined but never used.","'Container' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'createdDate' is assigned a value but never used.","'createdTime' is assigned a value but never used.","'Uploading' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [fetchMine]",{"range":"178","text":"179"},"Update the dependencies array to be: [fetchPosts, props.token]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchUsers]",{"range":"182","text":"183"},[742,744],"[fetchMine]",[1114,1127],"[fetchPosts, props.token]",[1497,1499],"[fetchUsers]"]