[{"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\index.js":"1","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\reportWebVitals.js":"2","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\App.jsx":"3","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\LikeButton.jsx":"4","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostIndex.jsx":"5","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Auth.jsx":"6","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostUpdate.jsx":"7","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostFeed.jsx":"8","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostCreate.jsx":"9","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Register.jsx":"10","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\navbar\\Navbar.jsx":"11","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Login.jsx":"12","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\Uploading.jsx":"13","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\UploadingProfile.jsx":"14","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostDelete.jsx":"15"},{"size":565,"mtime":1631323935484,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1630451620584,"results":"18","hashOfConfig":"17"},{"size":1134,"mtime":1631323935480,"results":"19","hashOfConfig":"17"},{"size":434,"mtime":1631660387534,"results":"20","hashOfConfig":"17"},{"size":1487,"mtime":1631668221511,"results":"21","hashOfConfig":"17"},{"size":510,"mtime":1631323935481,"results":"22","hashOfConfig":"17"},{"size":2546,"mtime":1631665863628,"results":"23","hashOfConfig":"17"},{"size":4583,"mtime":1631667691864,"results":"24","hashOfConfig":"17"},{"size":2676,"mtime":1631477758865,"results":"25","hashOfConfig":"17"},{"size":2609,"mtime":1631477758821,"results":"26","hashOfConfig":"17"},{"size":1170,"mtime":1631581318125,"results":"27","hashOfConfig":"17"},{"size":1549,"mtime":1631323935482,"results":"28","hashOfConfig":"17"},{"size":1316,"mtime":1631477466948,"results":"29","hashOfConfig":"17"},{"size":1321,"mtime":1631477758868,"results":"30","hashOfConfig":"17"},{"size":1024,"mtime":1631660395663,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"q1l10i",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\index.js",[],["67","68"],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\reportWebVitals.js",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\App.jsx",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport PostIndex from \"./posts/PostIndex\";\r\nimport Auth from \"./auth/Auth\";\r\nimport LikeButton from \"./posts/LikeButton\";\r\n\r\nfunction App() {\r\n  const [sessionToken, setSessionToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setSessionToken(localStorage.getItem(\"token\"));\r\n    }\r\n  }, []);\r\n\r\n  const updateToken = (newToken) => {\r\n    localStorage.setItem(\"token\", newToken);\r\n    setSessionToken(newToken);\r\n    console.log(\"This is the session token ====>\" + sessionToken);\r\n  };\r\n\r\n  const clearToken = () => {\r\n    localStorage.clear();\r\n    setSessionToken(\"\");\r\n  };\r\n\r\n  const protectedViews = () => {\r\n    return sessionToken === localStorage.getItem(\"token\") ? (\r\n      <PostIndex clearToken={clearToken} token={sessionToken} />\r\n    ) : (\r\n      <Auth updateToken={updateToken} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Sitebar clickLogout={clearToken}/> */}\r\n      {protectedViews()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\LikeButton.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostIndex.jsx",["70","71","72","73","74","75","76"],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Auth.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostUpdate.jsx",["77","78"],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostFeed.jsx",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostCreate.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Register.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\navbar\\Navbar.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\auth\\Login.jsx",[],"C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\Uploading.jsx",["98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\nconst Uploading = (props) => {\r\n    // const [image, setImage] = useState(\"\");\r\n  const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploading;\r\n","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\UploadingProfile.jsx",["100"],"import React, { useState } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\n\r\nconst UploadingProfile = (props) => {\r\n    const [image, setImage] = useState(\"\");\r\n  // const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadingProfile;\r\n","C:\\Users\\mstra\\Desktop\\BlueBadge\\InstaPet-Client\\src\\posts\\PostDelete.jsx",["101"],"import React, {useState} from 'react';\r\nimport { \r\n    Button,\r\n    Table,\r\n    Modal, \r\n    ModalHeader,\r\n    ModalBody\r\n } from 'reactstrap';\r\n\r\n \r\n\r\n const PostDelete = (props) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n\r\n    const deletePost = (posts) => {    \r\n    fetch(`http://localhost:3001/post/${posts.id}`, {\r\n          method: \"DELETE\",\r\n          headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            'Authorization': props.token,\r\n          })\r\n        })\r\n          .then(() => props.fetchPosts());\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n        <Button color=\"\" size=\"sm\" onClick={toggle}>\r\n        Delete Your Post\r\n        </Button>\r\n        <Modal isOpen={modal}>\r\n        <ModalHeader toggle={toggle} >Delete Your Post</ModalHeader>\r\n        <ModalBody>\r\n            <Button onClick={deletePost}>Delete</Button>\r\n        </ModalBody>\r\n        </Modal>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDelete",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":18},{"ruleId":"106","severity":1,"message":"110","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":19},{"ruleId":"106","severity":1,"message":"111","line":2,"column":21,"nodeType":"108","messageId":"109","endLine":2,"endColumn":24},{"ruleId":"106","severity":1,"message":"112","line":2,"column":26,"nodeType":"108","messageId":"109","endLine":2,"endColumn":29},{"ruleId":"106","severity":1,"message":"113","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"114","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"116","line":33,"column":6,"nodeType":"117","endLine":33,"endColumn":8,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":54,"column":6,"nodeType":"117","endLine":54,"endColumn":8,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":12,"column":9,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},{"ruleId":"106","severity":1,"message":"122","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":21},{"ruleId":"106","severity":1,"message":"123","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"124","line":2,"column":9,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"106","severity":1,"message":"125","line":2,"column":17,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"126","line":2,"column":24,"nodeType":"108","messageId":"109","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"111","line":2,"column":37,"nodeType":"108","messageId":"109","endLine":2,"endColumn":40},{"ruleId":"106","severity":1,"message":"112","line":2,"column":42,"nodeType":"108","messageId":"109","endLine":2,"endColumn":45},{"ruleId":"106","severity":1,"message":"110","line":2,"column":47,"nodeType":"108","messageId":"109","endLine":2,"endColumn":56},{"ruleId":"106","severity":1,"message":"127","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":18},{"ruleId":"106","severity":1,"message":"114","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":18},{"ruleId":"106","severity":1,"message":"128","line":11,"column":12,"nodeType":"108","messageId":"109","endLine":11,"endColumn":17},{"ruleId":"106","severity":1,"message":"129","line":13,"column":12,"nodeType":"108","messageId":"109","endLine":13,"endColumn":24},{"ruleId":"106","severity":1,"message":"130","line":14,"column":12,"nodeType":"108","messageId":"109","endLine":14,"endColumn":24},{"ruleId":"106","severity":1,"message":"131","line":17,"column":11,"nodeType":"108","messageId":"109","endLine":17,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":35,"column":10,"nodeType":"117","endLine":35,"endColumn":12,"suggestions":"132"},{"ruleId":"115","severity":1,"message":"116","line":53,"column":10,"nodeType":"117","endLine":53,"endColumn":12,"suggestions":"133"},{"ruleId":"106","severity":1,"message":"134","line":60,"column":13,"nodeType":"108","messageId":"109","endLine":60,"endColumn":21},{"ruleId":"106","severity":1,"message":"135","line":64,"column":13,"nodeType":"108","messageId":"109","endLine":64,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":72,"column":66,"nodeType":"138","messageId":"139","endLine":72,"endColumn":68},{"ruleId":"140","severity":1,"message":"141","line":96,"column":29,"nodeType":"142","endLine":96,"endColumn":73},{"ruleId":"106","severity":1,"message":"143","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":44,"column":13,"nodeType":"142","endLine":44,"endColumn":59},{"ruleId":"144","severity":1,"message":"145","line":45,"column":13,"nodeType":"142","endLine":45,"endColumn":59},{"ruleId":"106","severity":1,"message":"146","line":4,"column":5,"nodeType":"108","messageId":"109","endLine":4,"endColumn":10},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'LikeButton' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'PostFeed' is defined but never used.","'PostUpdate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["150"],"'Uploading' is defined but never used.","'editImage' is assigned a value but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'PostDelete' is defined but never used.","'posts' is assigned a value but never used.","'updateActive' is assigned a value but never used.","'postToUpdate' is assigned a value but never used.","'toggle' is assigned a value but never used.",["151"],["152"],"'updateOn' is assigned a value but never used.","'updateOff' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"153","fix":"158"},"Update the dependencies array to be: [fetchPosts]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchUsers]",{"range":"161","text":"162"},{"range":"163","text":"162"},{"range":"164","text":"160"},[863,865],"[fetchPosts]",[1261,1263],"[fetchUsers]",[1080,1082],[1540,1542]]