[{"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js":"1","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js":"2","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx":"3","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx":"4","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\LikeButton.jsx":"5","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx":"6","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx":"7","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx":"8","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx":"9","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx":"10","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostUpdate.jsx":"11","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx":"12","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx":"13","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx":"14","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx":"15","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\category.constants.js":"16","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Search.jsx":"17","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostDelete.jsx":"18"},{"size":565,"mtime":1631227282310,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1630414375750,"results":"21","hashOfConfig":"20"},{"size":1136,"mtime":1631881104780,"results":"22","hashOfConfig":"20"},{"size":510,"mtime":1631227512027,"results":"23","hashOfConfig":"20"},{"size":651,"mtime":1631896850677,"results":"24","hashOfConfig":"20"},{"size":1947,"mtime":1631843233330,"results":"25","hashOfConfig":"20"},{"size":3397,"mtime":1631843233327,"results":"26","hashOfConfig":"20"},{"size":2536,"mtime":1631843233344,"results":"27","hashOfConfig":"20"},{"size":3573,"mtime":1631897809538,"results":"28","hashOfConfig":"20"},{"size":1697,"mtime":1631843233331,"results":"29","hashOfConfig":"20"},{"size":4172,"mtime":1631896537906,"results":"30","hashOfConfig":"20"},{"size":4001,"mtime":1631881419001,"results":"31","hashOfConfig":"20"},{"size":2979,"mtime":1631898606921,"results":"32","hashOfConfig":"20"},{"size":1522,"mtime":1631637373126,"results":"33","hashOfConfig":"20"},{"size":1290,"mtime":1631750563151,"results":"34","hashOfConfig":"20"},{"size":916,"mtime":1631750563152,"results":"35","hashOfConfig":"20"},{"size":3753,"mtime":1631845603211,"results":"36","hashOfConfig":"20"},{"size":1158,"mtime":1631896546994,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"i3sdrs",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js",[],["83","84"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx",["85"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport PostIndex from \"./posts/PostIndex\";\r\nimport Auth from \"./auth/Auth\";\r\nimport LikeButton from \"./posts/LikeButton\";\r\n\r\n\r\nfunction App() {\r\n  const [sessionToken, setSessionToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setSessionToken(localStorage.getItem(\"token\"));\r\n    }\r\n  }, []);\r\n\r\n  const updateToken = (newToken) => {\r\n    localStorage.setItem(\"token\", newToken);\r\n    setSessionToken(newToken);\r\n    console.log(\"This is the session token ====>\" + sessionToken);\r\n  };\r\n\r\n  const clearToken = () => {\r\n    localStorage.clear();\r\n    setSessionToken(\"\");\r\n  };\r\n\r\n  const protectedViews = () => {\r\n    return sessionToken === localStorage.getItem(\"token\") ? (\r\n      <PostIndex clearToken={clearToken} token={sessionToken} />\r\n    ) : (\r\n      <Auth updateToken={updateToken} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Sitebar clickLogout={clearToken}/> */}\r\n      {protectedViews()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\LikeButton.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx",["86","87","88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport Sitebar from \"../navbar/Navbar\";\r\n\r\nconst PostIndex = (props) => {\r\n  // const [updateActive, setUpdateActive] = useState(false);\r\n  const [postToUpdate, setPostToUpdate] = useState({});\r\n\r\n  const [posts, setPosts] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n  const [mine, setMine] = useState(null);\r\n\r\n\r\n  const fetchMine = () => {\r\n    fetch(\"http://localhost:3001/post/mine\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((feedData) => {\r\n        setMine(feedData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMine();\r\n  }, []);\r\n\r\n  const fetchPosts = () => {\r\n    fetch(\"http://localhost:3001/post\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((feedData) => {\r\n        setPosts(feedData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [props.token]);\r\n\r\n  const fetchUsers = () => {\r\n    fetch(\"http://localhost:3001/user\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((UserData) => {\r\n        setUsers(UserData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  console.log(posts);\r\n  console.log(users);\r\n  return (\r\n    <div>\r\n\r\n      <Sitebar\r\n        token={props.token}\r\n        fetchPosts={fetchPosts}\r\n        setPosts={setPosts}\r\n        posts={posts}\r\n        users={users}\r\n        fetchMine={fetchMine}\r\n        mine={mine}\r\n        clickLogout={props.clearToken}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIndex;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx",["91"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport UploadingProfile from \"../posts/UploadingProfile\";\r\nimport BrandLogo from \"../InstaPet-logo.svg\"\r\n\r\nconst Register = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [profileImage, setprofileImage] = useState('');\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hey there brother\");\r\n    fetch(\"http://localhost:3001/user/create\", {\r\n      //1\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: {\r\n          userName: userName,\r\n          profileImage: profileImage,\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          password: password,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        history.push(\"/home\");\r\n        props.updateToken(data.sessionToken);\r\n        localStorage.setItem(\"profileImage\", profileImage)\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n    <div className=\"login-register\">\r\n      <img src={BrandLogo} alt=\"logo\" class=\"auth-logo\" style={{width: 300, margin: \"auto\"}} />\r\n      <p className=\"register-intro\">Sign up to see photos from your friends and their pets.</p>\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n              <UploadingProfile setprofileImage={setprofileImage} profileImage={profileImage} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setUserName(e.target.value)}\r\n            name=\"firstName\"\r\n            placeholder=\"Username\"\r\n            value={userName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            value={firstName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            value={lastName} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email} required\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password} required\r\n          />\r\n        </FormGroup>\r\n        <Button id=\"auth-login\" type=\"submit\" style={{marginTop: \"5%\"}}>Signup</Button>\r\n      </Form>\r\n      <p className=\"auth-toggle\">Already have an account? <Link  className=\"auth-toggle-link\" to=\"/\" variant=\"body2\">Sign in here</Link>\r\n      </p>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx",["92","93"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport BrandLogo from \"../InstaPet-logo.svg\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [toggle, setToggle] = useState(true);\r\n\r\n   let history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:3001/user/login\", {\r\n      //1\r\n      method: \"POST\",\r\n      body: JSON.stringify({ user: { email: email, password: password } }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        history.push(\"/home\");\r\n        props.updateToken(data.sessionToken);\r\n        localStorage.setItem(\"profileImage\",data.user.profileImage)\r\n      }); //ADD CATCH\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"login-register\">\r\n        <img\r\n          src={BrandLogo}\r\n          alt=\"logo\"\r\n          class=\"auth-logo\"\r\n          style={{ width: 300, margin: \"auto\" }}\r\n        />\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              name=\"email\"\r\n              required\r\n              value={email}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"password\">Password</Label>\r\n            <Input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              name=\"password\"\r\n              value={password}\r\n              required\r\n              type={toggle == true ? \"password\" : \"text\"}\r\n            />\r\n            <i\r\n              className={\r\n                toggle == true\r\n                  ? \"far fa-eye password-icon\"\r\n                  : \"far fa-eye-slash password-icon\"\r\n              }\r\n              onClick={() => setToggle(!toggle)}\r\n            />\r\n          </FormGroup>\r\n          <Button id=\"auth-login\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        <p className=\"auth-toggle\">\r\n          Don't have an account?{\" \"}\r\n          <Link className=\"auth-toggle-link\" to=\"/register\" variant=\"body2\">\r\n            Sign up\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx",["94","95","96","97","98","99","100","101","102","103","104"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx",["105","106","107","108"],"import React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n\r\nconst UserFeed = (props) => {\r\n    console.log(props.users);\r\n    console.log(props.mine);\r\n\r\n    const joinArrays = (userArr, postArr) => {\r\n        if (!userArr || !postArr) return;\r\n        return postArr.map((post) => [\r\n            post,\r\n            ...userArr.filter((u) => u.id == post.owner),\r\n        ]);\r\n    };\r\n\r\n    console.log(joinArrays(props.users, props.posts));\r\n\r\n\r\n\r\n\r\n    const postMapper = () => {\r\n        if (!props.users || !props.mine) return\r\n        return joinArrays(props.users, props.mine).slice(0).reverse().map((post, index) => {\r\n\r\n            const createdAt = new Date(post[0].createdAt);\r\n            const createdDate = createdAt.toLocaleDateString('en-US');\r\n            const createdTime = createdAt.toLocaleTimeString('en-US')\r\n\r\n            return (\r\n<div id=\"header\">\r\n    <div className=\"nameAndProfile\">\r\n                <img className=\"userProfilePic\" src={post[1].profileImage} alt=\"user\"/>\r\n                <span className=\"userName\">{post[1].userName}</span>\r\n                </div>\r\n                <div>\r\n                <Container>\r\n                    \r\n                <Row>\r\n                \r\n                  <Col sm> <img src={post[0].image} alt=\"post image\"/></Col>\r\n                  <Col sm> <img src={post[0].image} alt=\"post image\"/></Col>\r\n                  <Col sm> <img src={post[0].image} alt=\"post image\"/></Col>\r\n                 \r\n                </Row>\r\n              </Container>  \r\n              </div>\r\n</div>\r\n\r\n\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    return <div>{postMapper()}</div>;\r\n};\r\n\r\nexport default UserFeed;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostUpdate.jsx",["109","110","111","112"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx",["113","114"],"import React, { useState } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\nimport PlaceholderImage from \"../placeholder-profile-pic.png\"\r\n\r\n\r\nconst UploadingProfile = (props) => {\r\n    const [image, setImage] = useState(\"\");\r\n  const { setprofileImage} = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setprofileImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <img id=\"profile-pic\" src={ image == \"\" ? (PlaceholderImage) :(image)} alt=\"\" />\r\n        <FormGroup id=\"uploader\">\r\n        <label for=\"profile-image-upload\" class=\"custom-file-upload\">\r\n          <input \r\n            style={{display: \"none\"}}\r\n            id=\"profile-image-upload\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage} required\r\n          />          Add your Photo\r\n          </label>\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadingProfile;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx",["115","116"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\nconst Uploading = (props) => {\r\n  const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            required\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploading;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\category.constants.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Search.jsx",["117"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport {\r\n  AWESOME_AARDVARK,\r\n  COOL_CAT,\r\n  DARLING_DOGGO,\r\n  DELIGHTFUL_DOLPHIN,\r\n  FANTASTIC_FROG,\r\n  FIESTY_FOX,\r\n  HAPPY_HEDGEHOG,\r\n  LOVABLE_LLAMA,\r\n  NIFTY_NARWHAL,\r\n  PERFECT_PARROT,\r\n  PRETTY_PENGUIN,\r\n  PURPOSEFUL_PORPOISE,\r\n  ROCKIN_RABBIT,\r\n  SASSY_SLOTH,\r\n  SILLY_SHARK,\r\n  SLIPPERY_SNAKE,\r\n  SUPER_SEAL,\r\n  TUBULAR_TURTLE,\r\n  ZESTY_ZEBRA,\r\n} from \"./category.constants\";\r\n\r\nconst Search = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const handleFetch = (category) => {\r\n    fetch(`http://localhost:3001/post/${category}`, {\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.setPosts(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-dropdown\">\r\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n        <DropdownToggle id=\"search-button\" caret>Search by Category</DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={() => handleFetch(AWESOME_AARDVARK)}>\r\n            {AWESOME_AARDVARK}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(COOL_CAT)}>\r\n            {COOL_CAT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(DARLING_DOGGO)}>\r\n            {DARLING_DOGGO}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(DELIGHTFUL_DOLPHIN)}>\r\n            {DELIGHTFUL_DOLPHIN}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(FANTASTIC_FROG)}>\r\n            {FANTASTIC_FROG}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(FIESTY_FOX)}>\r\n            {FIESTY_FOX}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(HAPPY_HEDGEHOG)}>\r\n            {HAPPY_HEDGEHOG}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(LOVABLE_LLAMA)}>\r\n            {LOVABLE_LLAMA}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(NIFTY_NARWHAL)}>\r\n            {NIFTY_NARWHAL}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PERFECT_PARROT)}>\r\n            {PERFECT_PARROT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PRETTY_PENGUIN)}>\r\n            {PRETTY_PENGUIN}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PURPOSEFUL_PORPOISE)}>\r\n            {PURPOSEFUL_PORPOISE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(ROCKIN_RABBIT)}>\r\n            {ROCKIN_RABBIT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SASSY_SLOTH)}>\r\n            {SASSY_SLOTH}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SILLY_SHARK)}>\r\n            {SILLY_SHARK}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SLIPPERY_SNAKE)}>\r\n            {SLIPPERY_SNAKE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SUPER_SEAL)}>\r\n            {SUPER_SEAL}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(TUBULAR_TURTLE)}>\r\n            {TUBULAR_TURTLE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(ZESTY_ZEBRA)}>\r\n            {ZESTY_ZEBRA}\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostDelete.jsx",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":18},{"ruleId":"123","severity":1,"message":"127","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":22},{"ruleId":"123","severity":1,"message":"128","line":6,"column":24,"nodeType":"125","messageId":"126","endLine":6,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":29,"column":6,"nodeType":"131","endLine":29,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":47,"column":6,"nodeType":"131","endLine":47,"endColumn":19,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":65,"column":6,"nodeType":"131","endLine":65,"endColumn":8,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"137","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":8},{"ruleId":"138","severity":1,"message":"139","line":58,"column":28,"nodeType":"140","messageId":"141","endLine":58,"endColumn":30},{"ruleId":"138","severity":1,"message":"139","line":62,"column":24,"nodeType":"140","messageId":"141","endLine":62,"endColumn":26},{"ruleId":"123","severity":1,"message":"142","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"143","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":15},{"ruleId":"123","severity":1,"message":"144","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":31},{"ruleId":"123","severity":1,"message":"145","line":5,"column":33,"nodeType":"125","messageId":"126","endLine":5,"endColumn":45},{"ruleId":"123","severity":1,"message":"146","line":5,"column":47,"nodeType":"125","messageId":"126","endLine":5,"endColumn":59},{"ruleId":"123","severity":1,"message":"147","line":5,"column":61,"nodeType":"125","messageId":"126","endLine":5,"endColumn":75},{"ruleId":"123","severity":1,"message":"148","line":13,"column":12,"nodeType":"125","messageId":"126","endLine":13,"endColumn":27},{"ruleId":"123","severity":1,"message":"149","line":13,"column":29,"nodeType":"125","messageId":"126","endLine":13,"endColumn":47},{"ruleId":"123","severity":1,"message":"150","line":14,"column":11,"nodeType":"125","messageId":"126","endLine":14,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":18,"column":66,"nodeType":"140","messageId":"141","endLine":18,"endColumn":68},{"ruleId":"151","severity":1,"message":"152","line":44,"column":29,"nodeType":"153","endLine":44,"endColumn":73},{"ruleId":"123","severity":1,"message":"154","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"155","line":4,"column":9,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":15,"column":37,"nodeType":"140","messageId":"141","endLine":15,"endColumn":39},{"ruleId":"151","severity":1,"message":"152","line":41,"column":29,"nodeType":"153","endLine":41,"endColumn":73},{"ruleId":"123","severity":1,"message":"156","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"154","line":1,"column":29,"nodeType":"125","messageId":"126","endLine":1,"endColumn":38},{"ruleId":"123","severity":1,"message":"145","line":11,"column":3,"nodeType":"125","messageId":"126","endLine":11,"endColumn":15},{"ruleId":"123","severity":1,"message":"157","line":34,"column":8,"nodeType":"125","messageId":"126","endLine":34,"endColumn":17},{"ruleId":"123","severity":1,"message":"158","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":35,"column":43,"nodeType":"140","messageId":"141","endLine":35,"endColumn":45},{"ruleId":"123","severity":1,"message":"154","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"160","line":44,"column":13,"nodeType":"153","endLine":44,"endColumn":59},{"ruleId":"123","severity":1,"message":"154","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"145","line":2,"column":49,"nodeType":"125","messageId":"126","endLine":2,"endColumn":61},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'LikeButton' is defined but never used.","Identifier","unusedVar","'postToUpdate' is assigned a value but never used.","'setPostToUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMine'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["165"],"'Label' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useReducer' is defined but never used.","'Button' is defined but never used.","'ButtonDropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'showUpdateModal' is assigned a value but never used.","'setShowUpdateModal' is assigned a value but never used.","'toggle' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'Modal' is defined but never used.","'useContext' is defined but never used.","'Uploading' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [fetchMine]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchPosts, props.token]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchUsers]",{"range":"176","text":"177"},[771,773],"[fetchMine]",[1161,1174],"[fetchPosts, props.token]",[1562,1564],"[fetchUsers]"]