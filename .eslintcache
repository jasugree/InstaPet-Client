[{"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js":"1","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js":"2","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx":"3","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx":"4","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\LikeButton.jsx":"5","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx":"6","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx":"7","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx":"8","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx":"9","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx":"10","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostUpdate.jsx":"11","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx":"12","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx":"13","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx":"14","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx":"15","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\category.constants.js":"16","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Search.jsx":"17","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostDelete.jsx":"18"},{"size":565,"mtime":1631227282310,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1630414375750,"results":"21","hashOfConfig":"20"},{"size":1136,"mtime":1631680317545,"results":"22","hashOfConfig":"20"},{"size":510,"mtime":1631227512027,"results":"23","hashOfConfig":"20"},{"size":434,"mtime":1631680317546,"results":"24","hashOfConfig":"20"},{"size":2368,"mtime":1631832840175,"results":"25","hashOfConfig":"20"},{"size":3335,"mtime":1631833000951,"results":"26","hashOfConfig":"20"},{"size":2389,"mtime":1631750563144,"results":"27","hashOfConfig":"20"},{"size":2900,"mtime":1631832592486,"results":"28","hashOfConfig":"20"},{"size":2684,"mtime":1631829535931,"results":"29","hashOfConfig":"20"},{"size":4026,"mtime":1631830842786,"results":"30","hashOfConfig":"20"},{"size":3915,"mtime":1631750563146,"results":"31","hashOfConfig":"20"},{"size":3206,"mtime":1631832337486,"results":"32","hashOfConfig":"20"},{"size":1522,"mtime":1631637373126,"results":"33","hashOfConfig":"20"},{"size":1290,"mtime":1631750563151,"results":"34","hashOfConfig":"20"},{"size":916,"mtime":1631750563152,"results":"35","hashOfConfig":"20"},{"size":3750,"mtime":1631830262778,"results":"36","hashOfConfig":"20"},{"size":1057,"mtime":1631829382780,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"i3sdrs",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js",[],["81","82"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport PostIndex from \"./posts/PostIndex\";\r\nimport Auth from \"./auth/Auth\";\r\nimport LikeButton from \"./posts/LikeButton\";\r\n\r\n\r\nfunction App() {\r\n  const [sessionToken, setSessionToken] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setSessionToken(localStorage.getItem(\"token\"));\r\n    }\r\n  }, []);\r\n\r\n  const updateToken = (newToken) => {\r\n    localStorage.setItem(\"token\", newToken);\r\n    setSessionToken(newToken);\r\n    console.log(\"This is the session token ====>\" + sessionToken);\r\n  };\r\n\r\n  const clearToken = () => {\r\n    localStorage.clear();\r\n    setSessionToken(\"\");\r\n  };\r\n\r\n  const protectedViews = () => {\r\n    return sessionToken === localStorage.getItem(\"token\") ? (\r\n      <PostIndex clearToken={clearToken} token={sessionToken} />\r\n    ) : (\r\n      <Auth updateToken={updateToken} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Sitebar clickLogout={clearToken}/> */}\r\n      {protectedViews()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\LikeButton.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx",["84","85","86","87","88"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx",["89"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx",["90","91"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport BrandLogo from \"../InstaPet-logo.svg\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [toggle, setToggle] = useState(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:3001/user/login\", {\r\n      //1\r\n      method: \"POST\",\r\n      body: JSON.stringify({ user: { email: email, password: password } }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        props.updateToken(data.sessionToken);\r\n      }); //ADD CATCH\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"login-register\">\r\n        <img\r\n          src={BrandLogo}\r\n          alt=\"logo\"\r\n          class=\"auth-logo\"\r\n          style={{ width: 300, margin: \"auto\" }}\r\n        />\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup>\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              name=\"email\"\r\n              required\r\n              value={email}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"password\">Password</Label>\r\n            <Input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              name=\"password\"\r\n              value={password}\r\n              required\r\n              type={toggle == true ? \"password\" : \"text\"}\r\n            />\r\n            <i\r\n              className={\r\n                toggle == true\r\n                  ? \"far fa-eye password-icon\"\r\n                  : \"far fa-eye-slash password-icon\"\r\n              }\r\n              onClick={() => setToggle(!toggle)}\r\n            />\r\n          </FormGroup>\r\n          <Button id=\"auth-login\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        <p className=\"auth-toggle\">\r\n          Don't have an account?{\" \"}\r\n          <Link className=\"auth-toggle-link\" to=\"/register\" variant=\"body2\">\r\n            Sign up\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx",["92","93","94","95"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UserFeed.jsx",["96","97","98"],"import React, {useEffect} from 'react';\r\nimport PostDelete from './PostDelete';\r\nimport PostUpdate from './PostUpdate';\r\n\r\n\r\nconst UserFeed = (props) => {\r\n  console.log(props.users);\r\n  console.log(props.mine);\r\n\r\n  const joinArrays = (userArr, postArr) => {\r\n    if (!userArr || !postArr) return;\r\n    return postArr.map((post) => [\r\n      post,\r\n      ...userArr.filter((u) => u.id == post.owner),\r\n    ]);\r\n  };\r\n\r\n  console.log(joinArrays(props.users, props.posts));\r\n\r\n  \r\n\r\n\r\n    const postMapper = () => {\r\n        if(!props.users || !props.mine) return\r\n        return joinArrays(props.users, props.mine).slice(0).reverse().map((post, index) =>{\r\n\r\n            const createdAt = new Date(post[0].createdAt);\r\n            const createdDate = createdAt.toLocaleDateString('en-US');\r\n            const createdTime = createdAt.toLocaleTimeString('en-US')\r\n            \r\n            return(\r\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}> \r\n                <tr key={index}>\r\n                    <div className=\"postContainer\" style={{textAlign: 'left'}}>\r\n                        <div className=\"userHeader\">\r\n                            <img className=\"userProfilePic\" src={post[1].profileImage} alt=\"user\"/>\r\n                            <span className=\"userName\">{post[1].userName}</span>\r\n                        </div>\r\n                        <div className=\"picture\">\r\n                            <img src={post[0].image} alt=\"post image\" />\r\n                        </div>\r\n                <div className=\"postDetails\">\r\n                    <div className=\"timeLike\">\r\n                        <div className=\"time\">\r\n                            {createdDate} at {createdTime}\r\n                        </div>\r\n                        <div className=\"likes\">\r\n                            {post[0].likes}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                    <span className=\"userName-description\">{post[1].userName}</span> {post[0].description}\r\n                    </div>\r\n                    <PostUpdate post={post[0]} token={props.token} fetchPosts={props.fetchPosts} fetchMine={props.fetchMine} />\r\n                    <PostDelete post={post[0]} token={props.token} fetchPosts={props.fetchPosts} fetchMine={props.fetchMine} />\r\n                    <div className=\"category\">\r\n                        {post[0].category}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </tr>\r\n                </div>\r\n        )\r\n        })\r\n    }\r\n\r\n  return <div>{postMapper()}</div>;\r\n};\r\n\r\nexport default UserFeed;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostUpdate.jsx",["99","100","101"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx",["102","103"],"import React, { useState } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\nimport PlaceholderImage from \"../placeholder-profile-pic.png\"\r\n\r\n\r\nconst UploadingProfile = (props) => {\r\n    const [image, setImage] = useState(\"\");\r\n  const { setprofileImage} = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setprofileImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <img id=\"profile-pic\" src={ image == \"\" ? (PlaceholderImage) :(image)} alt=\"\" />\r\n        <FormGroup id=\"uploader\">\r\n        <label for=\"profile-image-upload\" class=\"custom-file-upload\">\r\n          <input \r\n            style={{display: \"none\"}}\r\n            id=\"profile-image-upload\"\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage} required\r\n          />          Add your Photo\r\n          </label>\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadingProfile;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx",["104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\nconst Uploading = (props) => {\r\n  const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            required\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploading;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\category.constants.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Search.jsx",["106"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport {\r\n  AWESOME_AARDVARK,\r\n  COOL_CAT,\r\n  DARLING_DOGGO,\r\n  DELIGHTFUL_DOLPHIN,\r\n  FANTASTIC_FROG,\r\n  FIESTY_FOX,\r\n  HAPPY_HEDGEHOG,\r\n  LOVABLE_LLAMA,\r\n  NIFTY_NARWHAL,\r\n  PERFECT_PARROT,\r\n  PRETTY_PENGUIN,\r\n  PURPOSEFUL_PORPOISE,\r\n  ROCKIN_RABBIT,\r\n  SASSY_SLOTH,\r\n  SILLY_SHARK,\r\n  SLIPPERY_SNAKE,\r\n  SUPER_SEAL,\r\n  TUBULAR_TURTLE,\r\n  ZESTY_ZEBRA,\r\n} from \"./category.constants\";\r\n\r\nconst Search = (props) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  const handleFetch = (category) => {\r\n    fetch(`http://localhost:3001/post/${category}`, {\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.setPosts(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-dropdown .z-depth-1-half\">\r\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n        <DropdownToggle caret>Search by Category</DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem onClick={() => handleFetch(AWESOME_AARDVARK)}>\r\n            {AWESOME_AARDVARK}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(COOL_CAT)}>\r\n            {COOL_CAT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(DARLING_DOGGO)}>\r\n            {DARLING_DOGGO}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(DELIGHTFUL_DOLPHIN)}>\r\n            {DELIGHTFUL_DOLPHIN}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(FANTASTIC_FROG)}>\r\n            {FANTASTIC_FROG}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(FIESTY_FOX)}>\r\n            {FIESTY_FOX}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(HAPPY_HEDGEHOG)}>\r\n            {HAPPY_HEDGEHOG}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(LOVABLE_LLAMA)}>\r\n            {LOVABLE_LLAMA}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(NIFTY_NARWHAL)}>\r\n            {NIFTY_NARWHAL}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PERFECT_PARROT)}>\r\n            {PERFECT_PARROT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PRETTY_PENGUIN)}>\r\n            {PRETTY_PENGUIN}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(PURPOSEFUL_PORPOISE)}>\r\n            {PURPOSEFUL_PORPOISE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(ROCKIN_RABBIT)}>\r\n            {ROCKIN_RABBIT}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SASSY_SLOTH)}>\r\n            {SASSY_SLOTH}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SILLY_SHARK)}>\r\n            {SILLY_SHARK}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SLIPPERY_SNAKE)}>\r\n            {SLIPPERY_SNAKE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(SUPER_SEAL)}>\r\n            {SUPER_SEAL}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(TUBULAR_TURTLE)}>\r\n            {TUBULAR_TURTLE}\r\n          </DropdownItem>\r\n          <DropdownItem onClick={() => handleFetch(ZESTY_ZEBRA)}>\r\n            {ZESTY_ZEBRA}\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostDelete.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":6,"column":24,"nodeType":"113","messageId":"114","endLine":6,"endColumn":39},{"ruleId":"117","severity":1,"message":"118","line":28,"column":6,"nodeType":"119","endLine":28,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":46,"column":6,"nodeType":"119","endLine":46,"endColumn":19,"suggestions":"122"},{"ruleId":"117","severity":1,"message":"123","line":65,"column":6,"nodeType":"119","endLine":65,"endColumn":8,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":8},{"ruleId":"126","severity":1,"message":"127","line":54,"column":28,"nodeType":"128","messageId":"129","endLine":54,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":58,"column":24,"nodeType":"128","messageId":"129","endLine":58,"endColumn":26},{"ruleId":"111","severity":1,"message":"130","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":12,"column":66,"nodeType":"128","messageId":"129","endLine":12,"endColumn":68},{"ruleId":"111","severity":1,"message":"131","line":25,"column":19,"nodeType":"113","messageId":"114","endLine":25,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":37,"column":29,"nodeType":"134","endLine":37,"endColumn":73},{"ruleId":"111","severity":1,"message":"135","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":14,"column":37,"nodeType":"128","messageId":"129","endLine":14,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":40,"column":29,"nodeType":"134","endLine":40,"endColumn":73},{"ruleId":"111","severity":1,"message":"136","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"111","severity":1,"message":"135","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"137","line":33,"column":8,"nodeType":"113","messageId":"114","endLine":33,"endColumn":17},{"ruleId":"111","severity":1,"message":"138","line":9,"column":10,"nodeType":"113","messageId":"114","endLine":9,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":35,"column":43,"nodeType":"128","messageId":"129","endLine":35,"endColumn":45},{"ruleId":"111","severity":1,"message":"135","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":44,"column":13,"nodeType":"134","endLine":44,"endColumn":59},{"ruleId":"111","severity":1,"message":"135","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'LikeButton' is defined but never used.","Identifier","unusedVar","'postToUpdate' is assigned a value but never used.","'setPostToUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMine'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["145"],"'Label' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useReducer' is defined but never used.","'checkData' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Uploading' is defined but never used.","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [fetchMine]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchPosts, props.token]",{"range":"154","text":"155"},"Update the dependencies array to be: [fetchUsers]",{"range":"156","text":"157"},[769,771],"[fetchMine]",[1159,1172],"[fetchPosts, props.token]",[1574,1576],"[fetchUsers]"]