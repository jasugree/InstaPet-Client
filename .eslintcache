[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"12","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/search/Search.jsx":"13"},{"size":547,"mtime":1631498826222,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1631498826225,"results":"16","hashOfConfig":"15"},{"size":1045,"mtime":1631498826220,"results":"17","hashOfConfig":"15"},{"size":489,"mtime":1631498826221,"results":"18","hashOfConfig":"15"},{"size":1500,"mtime":1631498826224,"results":"19","hashOfConfig":"15"},{"size":1495,"mtime":1631498826222,"results":"20","hashOfConfig":"15"},{"size":2517,"mtime":1631498826222,"results":"21","hashOfConfig":"15"},{"size":2274,"mtime":1631498826223,"results":"22","hashOfConfig":"15"},{"size":2625,"mtime":1631504694046,"results":"23","hashOfConfig":"15"},{"size":1208,"mtime":1631515067327,"results":"24","hashOfConfig":"15"},{"size":1268,"mtime":1631498826224,"results":"25","hashOfConfig":"15"},{"size":1264,"mtime":1631498826224,"results":"26","hashOfConfig":"15"},{"size":4847,"mtime":1631529525229,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"15o3fq",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["59","60"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Sitebar from \"../navbar/Navbar\";\nimport PostFeed from \"./PostFeed\";\nimport PostCreate from \"./PostCreate\";\n\nconst PostIndex = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [users, setUsers] = useState(null);\n\n  const fetchPosts = () => {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setPosts(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((UserData) => {\n        setUsers(UserData);\n      });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\nconsole.log(posts)\nconsole.log(users)\n  return (\n    <div>\n      <Sitebar token={props.token} fetchPosts={fetchPosts} clickLogout={props.clearToken} />\n      <Container>\n        <Row>\n          <Col>\n            <PostFeed posts={posts} fetchUsers={fetchUsers} users={users} fetchPosts={fetchPosts} token={props.token}  />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PostIndex;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["64","65","66"],"import React, { useReducer } from 'react';\n\nconst PostFeed = (props) => {\n    console.log(props.users);\n    console.log(props.posts);\n\n    const joinArrays = (userArr, postArr) => {\n        if(!userArr || !postArr) return\n        return postArr.map(post=>[post, ...userArr.filter(u=>u.id==post.owner)])\n      }\n\n      console.log(joinArrays(props.users, props.posts))\n\n    const postMapper = () => {\n        if(!props.users || !props.posts) return\n        return joinArrays(props.users, props.posts).slice(0).reverse().map((post, index) =>{\n\n            const createdAt = new Date(post[0].createdAt);\n            const createdDate = createdAt.toLocaleDateString('en-US');\n            const createdTime = createdAt.toLocaleTimeString('en-US')\n            \n            return(\n                <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}> \n                <tr key={index}>\n                    <div className=\"postContainer\" style={{textAlign: 'left'}}>\n                        <div className=\"userHeader\">\n                            <img className=\"userProfilePic\" src={post[1].profileImage} alt=\"user\"/>\n                            <span className=\"userName\">{post[1].firstName} {post[1].lastName}</span>\n                        </div>\n                        <div className=\"picture\">\n                            <img src={post[0].image} alt=\"post image\" />\n                        </div>\n                <div className=\"postDetails\">\n                    <div className=\"timeLike\">\n                        <div className=\"time\">\n                            {createdDate} at {createdTime}\n                        </div>\n                        <div className=\"likes\">\n                            {post[0].likes}\n                        </div>\n                    </div>\n                    <div className=\"description\">\n                        {post[0].description}\n                    </div>\n                    <div className=\"category\">\n                        {post[0].category}\n                    </div>\n                </div>\n                </div>\n                </tr>\n                </div>\n            )\n        })\n    }\n\n\n\n    return ( \n        <div>\n            {postMapper()}\n        </div>\n     );\n}\n \nexport default PostFeed;","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx",["67"],"import React, { useState } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\n\nconst UploadingProfile = (props) => {\n    const [image, setImage] = useState(\"\");\n  // const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default UploadingProfile;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["68","69"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  //   const [image, setImage] = useState(\"\");\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/search/Search.jsx",["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":27,"column":6,"nodeType":"82","endLine":27,"endColumn":8,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":46,"column":6,"nodeType":"82","endLine":46,"endColumn":8,"suggestions":"85"},{"ruleId":"76","severity":1,"message":"86","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":9,"column":66,"nodeType":"89","messageId":"90","endLine":9,"endColumn":68},{"ruleId":"91","severity":1,"message":"92","line":31,"column":29,"nodeType":"93","endLine":31,"endColumn":73},{"ruleId":"94","severity":1,"message":"95","line":45,"column":13,"nodeType":"93","endLine":45,"endColumn":59},{"ruleId":"76","severity":1,"message":"96","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"95","line":44,"column":13,"nodeType":"93","endLine":44,"endColumn":59},{"ruleId":"76","severity":1,"message":"96","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"97","line":5,"column":20,"nodeType":"78","messageId":"79","endLine":5,"endColumn":31},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["101"],"'useReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'setCategory' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [fetchPosts]",{"range":"106","text":"107"},"Update the dependencies array to be: [fetchUsers]",{"range":"108","text":"109"},[703,705],"[fetchPosts]",[1076,1078],"[fetchUsers]"]