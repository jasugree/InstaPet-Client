[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"11"},{"size":547,"mtime":1631137475126,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1630855023831,"results":"14","hashOfConfig":"13"},{"size":1045,"mtime":1631379545758,"results":"15","hashOfConfig":"13"},{"size":489,"mtime":1631379271932,"results":"16","hashOfConfig":"13"},{"size":1515,"mtime":1631379470279,"results":"17","hashOfConfig":"13"},{"size":1495,"mtime":1631379282172,"results":"18","hashOfConfig":"13"},{"size":2217,"mtime":1631379301671,"results":"19","hashOfConfig":"13"},{"size":2547,"mtime":1631379371644,"results":"20","hashOfConfig":"13"},{"size":1735,"mtime":1631379451730,"results":"21","hashOfConfig":"13"},{"size":1110,"mtime":1631395048178,"results":"22","hashOfConfig":"13"},{"size":1264,"mtime":1631209889448,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15o3fq",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["50","51"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["52","53","54"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Sitebar from \"../navbar/Navbar\";\nimport PostFeed from \"./PostFeed\";\nimport PostCreate from \"./PostCreate\";\n\nconst PostIndex = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const fetchPosts = () => {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setPosts(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((UserData) => {\n        setUsers(UserData);\n      });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <div>\n      <Sitebar token={props.token} clickLogout={props.clearToken} />\n      <Container>\n        <Row>\n          <Col>\n            <PostFeed\n              posts={posts}\n              fetchUsers={fetchUsers}\n              users={users}\n              fetchPosts={fetchPosts}\n              token={props.token}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PostIndex;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["55"],"import React, { useReducer } from \"react\";\n\nconst PostFeed = (props) => {\n  console.log(props.users);\n  console.log(props.posts);\n  const postMapper = () => {\n    console.log(\"ignore\");\n    return props.posts\n      .slice(0)\n      .reverse()\n      .map((post, index) => {\n        const createdAt = new Date(post.createdAt);\n        const createdDate = createdAt.toLocaleDateString(\"en-US\");\n        const createdTime = createdAt.toLocaleTimeString(\"en-US\");\n\n        return (\n          <div>\n            <tr key={index}>\n              <div className=\"postContainer\" style={{ textAlign: \"left\" }}>\n                <div className=\"userHeader\">\n                  <img\n                    src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\"\n                    alt=\"user\"\n                    style={{ width: 50 }}\n                  />\n                  <span>trash</span>\n                </div>\n                <div className=\"picture\">\n                  <img src={post.image} alt=\"fox\" style={{ width: 200 }} />\n                </div>\n              </div>\n              <div className=\"postDetails\">\n                <div className=\"timeLike\">\n                  <div className=\"time\">\n                    {createdDate} at {createdTime}\n                  </div>\n                  <div className=\"likes\">{post.likes}</div>\n                </div>\n                <div className=\"description\">{post.description}</div>\n                <div className=\"category\">{post.category}</div>\n              </div>\n            </tr>\n          </div>\n        );\n      });\n  };\n\n  return <div>{postMapper()}</div>;\n};\n\nexport default PostFeed;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["56","57"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  //   const [image, setImage] = useState(\"\");\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":27,"column":6,"nodeType":"68","endLine":27,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":45,"column":6,"nodeType":"68","endLine":45,"endColumn":8,"suggestions":"71"},{"ruleId":"62","severity":1,"message":"72","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":27},{"ruleId":"62","severity":1,"message":"73","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":44,"column":13,"nodeType":"76","endLine":44,"endColumn":59},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["80"],"'useReducer' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchPosts]",{"range":"85","text":"86"},"Update the dependencies array to be: [fetchUsers]",{"range":"87","text":"88"},[699,701],"[fetchPosts]",[1071,1073],"[fetchUsers]"]