[{"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js":"1","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js":"2","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx":"3","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx":"4","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx":"5","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx":"6","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx":"7","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx":"8","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx":"9","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx":"10","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx":"11","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx":"12"},{"size":565,"mtime":1631227282310,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1630414375750,"results":"15","hashOfConfig":"14"},{"size":1088,"mtime":1631301650068,"results":"16","hashOfConfig":"14"},{"size":1563,"mtime":1631308962240,"results":"17","hashOfConfig":"14"},{"size":510,"mtime":1631227512027,"results":"18","hashOfConfig":"14"},{"size":1549,"mtime":1631227282265,"results":"19","hashOfConfig":"14"},{"size":2609,"mtime":1631308957888,"results":"20","hashOfConfig":"14"},{"size":1144,"mtime":1631308956753,"results":"21","hashOfConfig":"14"},{"size":2676,"mtime":1631308955133,"results":"22","hashOfConfig":"14"},{"size":1316,"mtime":1631227600913,"results":"23","hashOfConfig":"14"},{"size":2338,"mtime":1631312814898,"results":"24","hashOfConfig":"14"},{"size":1321,"mtime":1631308958703,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"a3r5qx",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\index.js",[],["54","55"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\reportWebVitals.js",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\App.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostIndex.jsx",["56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport Sitebar from \"../navbar/Navbar\";\r\nimport PostFeed from \"./PostFeed\";\r\nimport PostCreate from \"./PostCreate\";\r\n\r\nconst PostIndex = (props) => {\r\n  const [posts, setPosts] = useState(null);\r\n  const [users, setUsers] = useState(null);\r\n\r\n  const fetchPosts = () => {\r\n    fetch(\"http://localhost:3001/post\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((feedData) => {\r\n        setPosts(feedData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n\r\n  const fetchUsers = () => {\r\n    fetch(\"http://localhost:3001/user\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: props.token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((UserData) => {\r\n        setUsers(UserData);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\nconsole.log(posts)\r\nconsole.log(users)\r\n  return (\r\n    <div>\r\n      <Sitebar token={props.token} fetchPosts={fetchPosts} clickLogout={props.clearToken} />\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <PostFeed posts={posts} fetchUsers={fetchUsers} users={users} fetchPosts={fetchPosts} token={props.token}  />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIndex;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Auth.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Login.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\auth\\Register.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\navbar\\Navbar.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostCreate.jsx",[],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\Uploading.jsx",["59","60"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\nconst Uploading = (props) => {\r\n  //   const [image, setImage] = useState(\"\");\r\n  const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Uploading;\r\n","C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\PostFeed.jsx",["61","62","63"],"C:\\Users\\Jacob Greene\\Desktop\\Coding\\ElevenFiftyProjects\\InstaPet-Client\\instapet-app\\src\\posts\\UploadingProfile.jsx",["64"],"import React, { useState } from \"react\";\r\nimport { Container, FormGroup } from \"reactstrap\";\r\n\r\n\r\nconst UploadingProfile = (props) => {\r\n    const [image, setImage] = useState(\"\");\r\n  // const { setImage, image } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const UploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"Jake-test\");\r\n    setLoading(true);\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n    const File = await res.json();\r\n\r\n    console.log(File.secure_url);\r\n    setImage(File.secure_url);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Upload Your Picture</h1>\r\n        <FormGroup>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            placeholder=\"Upload Image Here\"\r\n            onChange={UploadImage}\r\n          />\r\n          <br />\r\n          {loading ? (\r\n            <h3>Loading...</h3>\r\n          ) : (\r\n            <img src={image} style={{ width: \"300px\" }} />\r\n          )}\r\n        </FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadingProfile;\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":27,"column":6,"nodeType":"75","endLine":27,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":46,"column":6,"nodeType":"75","endLine":46,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":44,"column":13,"nodeType":"82","endLine":44,"endColumn":59},{"ruleId":"69","severity":1,"message":"83","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":9,"column":66,"nodeType":"86","messageId":"87","endLine":9,"endColumn":68},{"ruleId":"88","severity":1,"message":"89","line":31,"column":29,"nodeType":"82","endLine":31,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":45,"column":13,"nodeType":"82","endLine":45,"endColumn":59},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["93"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [fetchPosts]",{"range":"98","text":"99"},"Update the dependencies array to be: [fetchUsers]",{"range":"100","text":"101"},[729,731],"[fetchPosts]",[1121,1123],"[fetchUsers]"]