[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"12","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx":"13","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js":"14","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/LikeButton.jsx":"15","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UserFeed.jsx":"16","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostUpdate.jsx":"17","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostDelete.jsx":"18"},{"size":547,"mtime":1631498826222,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1631498826225,"results":"21","hashOfConfig":"20"},{"size":1091,"mtime":1631742179685,"results":"22","hashOfConfig":"20"},{"size":489,"mtime":1631498826221,"results":"23","hashOfConfig":"20"},{"size":1861,"mtime":1631842643172,"results":"24","hashOfConfig":"20"},{"size":2377,"mtime":1631842643169,"results":"25","hashOfConfig":"20"},{"size":3286,"mtime":1631842643169,"results":"26","hashOfConfig":"20"},{"size":3913,"mtime":1631842643171,"results":"27","hashOfConfig":"20"},{"size":3828,"mtime":1631842643171,"results":"28","hashOfConfig":"20"},{"size":2363,"mtime":1631842643170,"results":"29","hashOfConfig":"20"},{"size":1469,"mtime":1631742179686,"results":"30","hashOfConfig":"20"},{"size":1238,"mtime":1631742920239,"results":"31","hashOfConfig":"20"},{"size":3633,"mtime":1631732456730,"results":"32","hashOfConfig":"20"},{"size":879,"mtime":1631729611244,"results":"33","hashOfConfig":"20"},{"size":415,"mtime":1631842643170,"results":"34","hashOfConfig":"20"},{"size":1638,"mtime":1631842643172,"results":"35","hashOfConfig":"20"},{"size":3864,"mtime":1631842643172,"results":"36","hashOfConfig":"20"},{"size":1035,"mtime":1631842643171,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15o3fq",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["79","80"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",["81"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport PostIndex from \"./posts/PostIndex\";\nimport Auth from \"./auth/Auth\";\nimport LikeButton from \"./posts/LikeButton\";\n\n\nfunction App() {\n  const [sessionToken, setSessionToken] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setSessionToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const updateToken = (newToken) => {\n    localStorage.setItem(\"token\", newToken);\n    setSessionToken(newToken);\n    console.log(\"This is the session token ====>\" + sessionToken);\n  };\n\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken(\"\");\n  };\n\n  const protectedViews = () => {\n    return sessionToken === localStorage.getItem(\"token\") ? (\n      <PostIndex clearToken={clearToken} token={sessionToken} />\n    ) : (\n      <Auth updateToken={updateToken} />\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <Sitebar clickLogout={clearToken}/> */}\n      {protectedViews()}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["82","83","84","85","86"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",["87","88"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",["89"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["90","91","92","93"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx",["94","95"],"import React, { useState } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\nimport PlaceholderImage from \"../placeholder-profile-pic.png\"\n\n\nconst UploadingProfile = (props) => {\n    const [image, setImage] = useState(\"\");\n  const { setprofileImage} = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setprofileImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <img id=\"profile-pic\" src={ image == \"\" ? (PlaceholderImage) :(image)} alt=\"\" />\n        <FormGroup id=\"uploader\">\n        <label for=\"profile-image-upload\" class=\"custom-file-upload\">\n          <input \n            style={{display: \"none\"}}\n            id=\"profile-image-upload\"\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage} required\n          />          Add your Photo\n          </label>\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default UploadingProfile;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["96","97"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            required\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx",["98"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport {\n  AWESOME_AARDVARK,\n  COOL_CAT,\n  DARLING_DOGGO,\n  DELIGHTFUL_DOLPHIN,\n  FANTASTIC_FROG,\n  FIESTY_FOX,\n  HAPPY_HEDGEHOG,\n  LOVABLE_LLAMA,\n  NIFTY_NARWHAL,\n  PERFECT_PARROT,\n  PRETTY_PENGUIN,\n  PURPOSEFUL_PORPOISE,\n  ROCKIN_RABBIT,\n  SASSY_SLOTH,\n  SILLY_SHARK,\n  SLIPPERY_SNAKE,\n  SUPER_SEAL,\n  TUBULAR_TURTLE,\n  ZESTY_ZEBRA,\n} from \"./category.constants\";\n\nconst Search = (props) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const handleFetch = (category) => {\n    fetch(`http://localhost:3001/post/${category}`, {\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        props.setPosts(data);\n      });\n  };\n\n  return (\n    <div className=\"search-dropdown .z-depth-1-half\">\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>Search by Category</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={() => handleFetch(AWESOME_AARDVARK)}>\n            {AWESOME_AARDVARK}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(COOL_CAT)}>\n            {COOL_CAT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(DARLING_DOGGO)}>\n            {DARLING_DOGGO}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(DELIGHTFUL_DOLPHIN)}>\n            {DELIGHTFUL_DOLPHIN}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(FANTASTIC_FROG)}>\n            {FANTASTIC_FROG}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(FIESTY_FOX)}>\n            {FIESTY_FOX}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(HAPPY_HEDGEHOG)}>\n            {HAPPY_HEDGEHOG}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(LOVABLE_LLAMA)}>\n            {LOVABLE_LLAMA}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(NIFTY_NARWHAL)}>\n            {NIFTY_NARWHAL}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PERFECT_PARROT)}>\n            {PERFECT_PARROT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PRETTY_PENGUIN)}>\n            {PRETTY_PENGUIN}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(PURPOSEFUL_PORPOISE)}>\n            {PURPOSEFUL_PORPOISE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(ROCKIN_RABBIT)}>\n            {ROCKIN_RABBIT}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SASSY_SLOTH)}>\n            {SASSY_SLOTH}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SILLY_SHARK)}>\n            {SILLY_SHARK}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SLIPPERY_SNAKE)}>\n            {SLIPPERY_SNAKE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(SUPER_SEAL)}>\n            {SUPER_SEAL}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(TUBULAR_TURTLE)}>\n            {TUBULAR_TURTLE}\n          </DropdownItem>\n          <DropdownItem onClick={() => handleFetch(ZESTY_ZEBRA)}>\n            {ZESTY_ZEBRA}\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default Search;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/LikeButton.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UserFeed.jsx",["99","100","101","102","103","104","105"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostUpdate.jsx",["106","107","108","109"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostDelete.jsx",["110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"115","severity":1,"message":"119","line":6,"column":10,"nodeType":"117","messageId":"118","endLine":6,"endColumn":22},{"ruleId":"115","severity":1,"message":"120","line":6,"column":24,"nodeType":"117","messageId":"118","endLine":6,"endColumn":39},{"ruleId":"121","severity":1,"message":"122","line":29,"column":6,"nodeType":"123","endLine":29,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":47,"column":6,"nodeType":"123","endLine":47,"endColumn":19,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":65,"column":6,"nodeType":"123","endLine":65,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":55,"column":28,"nodeType":"131","messageId":"132","endLine":55,"endColumn":30},{"ruleId":"129","severity":1,"message":"130","line":59,"column":24,"nodeType":"131","messageId":"132","endLine":59,"endColumn":26},{"ruleId":"115","severity":1,"message":"133","line":7,"column":3,"nodeType":"117","messageId":"118","endLine":7,"endColumn":8},{"ruleId":"115","severity":1,"message":"134","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"135","line":6,"column":9,"nodeType":"117","messageId":"118","endLine":6,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":19,"column":66,"nodeType":"131","messageId":"132","endLine":19,"endColumn":68},{"ruleId":"136","severity":1,"message":"137","line":43,"column":29,"nodeType":"138","endLine":43,"endColumn":73},{"ruleId":"115","severity":1,"message":"139","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":35,"column":43,"nodeType":"131","messageId":"132","endLine":35,"endColumn":45},{"ruleId":"115","severity":1,"message":"140","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":44,"column":13,"nodeType":"138","endLine":44,"endColumn":59},{"ruleId":"115","severity":1,"message":"140","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"140","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"130","line":13,"column":43,"nodeType":"131","messageId":"132","endLine":13,"endColumn":45},{"ruleId":"115","severity":1,"message":"143","line":27,"column":19,"nodeType":"117","messageId":"118","endLine":27,"endColumn":30},{"ruleId":"115","severity":1,"message":"144","line":28,"column":19,"nodeType":"117","messageId":"118","endLine":28,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":41,"column":28,"nodeType":"138","endLine":41,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":42,"column":28,"nodeType":"138","endLine":42,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":43,"column":28,"nodeType":"138","endLine":43,"endColumn":71},{"ruleId":"115","severity":1,"message":"145","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"140","line":1,"column":29,"nodeType":"117","messageId":"118","endLine":1,"endColumn":38},{"ruleId":"115","severity":1,"message":"146","line":11,"column":3,"nodeType":"117","messageId":"118","endLine":11,"endColumn":15},{"ruleId":"115","severity":1,"message":"147","line":34,"column":8,"nodeType":"117","messageId":"118","endLine":34,"endColumn":17},{"ruleId":"115","severity":1,"message":"146","line":2,"column":49,"nodeType":"117","messageId":"118","endLine":2,"endColumn":61},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'LikeButton' is defined but never used.","Identifier","unusedVar","'postToUpdate' is assigned a value but never used.","'setPostToUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMine'. Either include it or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["152"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Label' is defined but never used.","'useReducer' is defined but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'createdDate' is assigned a value but never used.","'createdTime' is assigned a value but never used.","'useContext' is defined but never used.","'DropdownItem' is defined but never used.","'Uploading' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [fetchMine]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetchPosts, props.token]",{"range":"161","text":"162"},"Update the dependencies array to be: [fetchUsers]",{"range":"163","text":"164"},[743,745],"[fetchMine]",[1115,1128],"[fetchPosts, props.token]",[1498,1500],"[fetchUsers]"]