[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"12","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx":"13","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js":"14"},{"size":547,"mtime":1631498826222,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1631498826225,"results":"17","hashOfConfig":"16"},{"size":1045,"mtime":1631664075453,"results":"18","hashOfConfig":"16"},{"size":489,"mtime":1631498826221,"results":"19","hashOfConfig":"16"},{"size":1644,"mtime":1631727344845,"results":"20","hashOfConfig":"16"},{"size":1495,"mtime":1631498826222,"results":"21","hashOfConfig":"16"},{"size":2517,"mtime":1631498826222,"results":"22","hashOfConfig":"16"},{"size":2176,"mtime":1631661185770,"results":"23","hashOfConfig":"16"},{"size":3980,"mtime":1631731865912,"results":"24","hashOfConfig":"16"},{"size":1313,"mtime":1631727041918,"results":"25","hashOfConfig":"16"},{"size":1268,"mtime":1631498826224,"results":"26","hashOfConfig":"16"},{"size":1264,"mtime":1631498826224,"results":"27","hashOfConfig":"16"},{"size":3633,"mtime":1631732456730,"results":"28","hashOfConfig":"16"},{"size":879,"mtime":1631729611244,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15o3fq",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["63","64"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["65","66","67"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Sitebar from \"../navbar/Navbar\";\nimport PostFeed from \"./PostFeed\";\nimport PostCreate from \"./PostCreate\";\n\nconst PostIndex = (props) => {\n  const [posts, setPosts] = useState(null);\n  const [users, setUsers] = useState(null);\n\n  const fetchPosts = () => {\n    fetch(\"http://localhost:3001/post\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((feedData) => {\n        setPosts(feedData);\n      });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const fetchUsers = () => {\n    fetch(\"http://localhost:3001/user\", {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((UserData) => {\n        setUsers(UserData);\n      });\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  console.log(posts);\n  console.log(users);\n  return (\n    <div>\n      <Sitebar\n        token={props.token}\n        fetchPosts={fetchPosts}\n        clickLogout={props.clearToken}\n        setPosts={setPosts}\n      />\n      <Container>\n        <Row>\n          <Col>\n            <PostFeed\n              posts={posts}\n              fetchUsers={fetchUsers}\n              users={users}\n              fetchPosts={fetchPosts}\n              token={props.token}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PostIndex;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["68","69","70"],"import React, { useReducer } from \"react\";\n\nconst PostFeed = (props) => {\n  console.log(props.users);\n  console.log(props.posts);\n\n  const joinArrays = (userArr, postArr) => {\n    if (!userArr || !postArr) return;\n    return postArr.map((post) => [\n      post,\n      ...userArr.filter((u) => u.id == post.owner),\n    ]);\n  };\n\n  console.log(joinArrays(props.users, props.posts));\n\n  const postMapper = () => {\n    if (!props.users || !props.posts) return;\n    return joinArrays(props.users, props.posts)\n      .slice(0)\n      .reverse()\n      .map((post, index) => {\n        const createdAt = new Date(post[0].createdAt);\n        const createdDate = createdAt.toLocaleDateString(\"en-US\");\n        const createdTime = createdAt.toLocaleTimeString(\"en-US\");\n\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            key={index}\n          >\n            <tr>\n              <div className=\"postContainer\" style={{ textAlign: \"left\" }}>\n                <div className=\"userHeader\">\n                  <img\n                    className=\"userProfilePic\"\n                    src={post[1].profileImage}\n                    alt=\"user\"\n                  />\n                  <span className=\"userName\">\n                    {post[1].firstName} {post[1].lastName}\n                  </span>\n                </div>\n                <div className=\"picture\">\n                  <img src={post[0].image} alt=\"post image\" />\n                </div>\n                <div className=\"postDetails\">\n                  <div className=\"timeLike\">\n                    <div className=\"time\">\n                      {createdDate} at {createdTime}\n                    </div>\n                    <div className=\"likes\">{post[0].likes}</div>\n                  </div>\n                  <div className=\"description\">{post[0].description}</div>\n                  <div className=\"category\">{post[0].category}</div>\n                </div>\n              </div>\n            </tr>\n          </div>\n        );\n      });\n  };\n\n  return <div>{postMapper()}</div>;\n};\n\nexport default PostFeed;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx",["71"],"import React, { useState } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\n\nconst UploadingProfile = (props) => {\n    const [image, setImage] = useState(\"\");\n  // const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default UploadingProfile;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["72","73"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  //   const [image, setImage] = useState(\"\");\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx",["74"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":27,"column":6,"nodeType":"85","endLine":27,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":45,"column":6,"nodeType":"85","endLine":45,"endColumn":8,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"91","line":11,"column":37,"nodeType":"92","messageId":"93","endLine":11,"endColumn":39},{"ruleId":"94","severity":1,"message":"95","line":49,"column":19,"nodeType":"96","endLine":49,"endColumn":63},{"ruleId":"97","severity":1,"message":"98","line":45,"column":13,"nodeType":"96","endLine":45,"endColumn":59},{"ruleId":"79","severity":1,"message":"99","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":44,"column":13,"nodeType":"96","endLine":44,"endColumn":59},{"ruleId":"79","severity":1,"message":"99","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["103"],"'useReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [fetchPosts]",{"range":"108","text":"109"},"Update the dependencies array to be: [fetchUsers]",{"range":"110","text":"111"},[703,705],"[fetchPosts]",[1075,1077],"[fetchUsers]"]