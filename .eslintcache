[{"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js":"1","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js":"2","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx":"3","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx":"4","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx":"5","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx":"6","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx":"7","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx":"8","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx":"9","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx":"10","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx":"11","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx":"12","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx":"13","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js":"14"},{"size":547,"mtime":1631498826222,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1631498826225,"results":"17","hashOfConfig":"16"},{"size":1045,"mtime":1631664075453,"results":"18","hashOfConfig":"16"},{"size":489,"mtime":1631498826221,"results":"19","hashOfConfig":"16"},{"size":1644,"mtime":1631727344845,"results":"20","hashOfConfig":"16"},{"size":1495,"mtime":1631498826222,"results":"21","hashOfConfig":"16"},{"size":2517,"mtime":1631498826222,"results":"22","hashOfConfig":"16"},{"size":2176,"mtime":1631661185770,"results":"23","hashOfConfig":"16"},{"size":3980,"mtime":1631731865912,"results":"24","hashOfConfig":"16"},{"size":1313,"mtime":1631727041918,"results":"25","hashOfConfig":"16"},{"size":1268,"mtime":1631498826224,"results":"26","hashOfConfig":"16"},{"size":1264,"mtime":1631498826224,"results":"27","hashOfConfig":"16"},{"size":3444,"mtime":1631730980128,"results":"28","hashOfConfig":"16"},{"size":879,"mtime":1631729611244,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"15o3fq",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/index.js",[],["62","63"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/reportWebVitals.js",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/App.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Auth.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostIndex.jsx",["64","65","66"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Login.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/auth/Register.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostFeed.jsx",["67","68","69"],"import React, { useReducer } from \"react\";\n\nconst PostFeed = (props) => {\n  console.log(props.users);\n  console.log(props.posts);\n\n  const joinArrays = (userArr, postArr) => {\n    if (!userArr || !postArr) return;\n    return postArr.map((post) => [\n      post,\n      ...userArr.filter((u) => u.id == post.owner),\n    ]);\n  };\n\n  console.log(joinArrays(props.users, props.posts));\n\n  const postMapper = () => {\n    if (!props.users || !props.posts) return;\n    return joinArrays(props.users, props.posts)\n      .slice(0)\n      .reverse()\n      .map((post, index) => {\n        const createdAt = new Date(post[0].createdAt);\n        const createdDate = createdAt.toLocaleDateString(\"en-US\");\n        const createdTime = createdAt.toLocaleTimeString(\"en-US\");\n\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            key={index}\n          >\n            <tr>\n              <div className=\"postContainer\" style={{ textAlign: \"left\" }}>\n                <div className=\"userHeader\">\n                  <img\n                    className=\"userProfilePic\"\n                    src={post[1].profileImage}\n                    alt=\"user\"\n                  />\n                  <span className=\"userName\">\n                    {post[1].firstName} {post[1].lastName}\n                  </span>\n                </div>\n                <div className=\"picture\">\n                  <img src={post[0].image} alt=\"post image\" />\n                </div>\n                <div className=\"postDetails\">\n                  <div className=\"timeLike\">\n                    <div className=\"time\">\n                      {createdDate} at {createdTime}\n                    </div>\n                    <div className=\"likes\">{post[0].likes}</div>\n                  </div>\n                  <div className=\"description\">{post[0].description}</div>\n                  <div className=\"category\">{post[0].category}</div>\n                </div>\n              </div>\n            </tr>\n          </div>\n        );\n      });\n  };\n\n  return <div>{postMapper()}</div>;\n};\n\nexport default PostFeed;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/PostCreate.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/navbar/Navbar.jsx",[],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/UploadingProfile.jsx",["70"],"import React, { useState } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\n\nconst UploadingProfile = (props) => {\n    const [image, setImage] = useState(\"\");\n  // const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default UploadingProfile;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Uploading.jsx",["71","72"],"import React, { useState, useEffect } from \"react\";\nimport { Container, FormGroup } from \"reactstrap\";\n\nconst Uploading = (props) => {\n  //   const [image, setImage] = useState(\"\");\n  const { setImage, image } = props;\n  const [loading, setLoading] = useState(false);\n\n  const UploadImage = async (e) => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", \"Jake-test\");\n    setLoading(true);\n    const res = await fetch(\n      \"https://api.cloudinary.com/v1_1/jgreene/image/upload\",\n      {\n        method: \"POST\",\n        body: data,\n      }\n    );\n    const File = await res.json();\n\n    console.log(File.secure_url);\n    setImage(File.secure_url);\n    setLoading(false);\n  };\n\n  return (\n    <div>\n      <Container>\n        <h1>Upload Your Picture</h1>\n        <FormGroup>\n          <input\n            type=\"file\"\n            name=\"file\"\n            placeholder=\"Upload Image Here\"\n            onChange={UploadImage}\n          />\n          <br />\n          {loading ? (\n            <h3>Loading...</h3>\n          ) : (\n            <img src={image} style={{ width: \"300px\" }} />\n          )}\n        </FormGroup>\n      </Container>\n    </div>\n  );\n};\n\nexport default Uploading;\n","/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/Search.jsx",["73"],"/Users/courtneydowns/Desktop/Blue Badge Project/blue-badge-client/InstaPet-Client/src/posts/category.constants.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":27,"column":6,"nodeType":"84","endLine":27,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":45,"column":6,"nodeType":"84","endLine":45,"endColumn":8,"suggestions":"87"},{"ruleId":"78","severity":1,"message":"88","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":11,"column":37,"nodeType":"91","messageId":"92","endLine":11,"endColumn":39},{"ruleId":"93","severity":1,"message":"94","line":49,"column":19,"nodeType":"95","endLine":49,"endColumn":63},{"ruleId":"96","severity":1,"message":"97","line":45,"column":13,"nodeType":"95","endLine":45,"endColumn":59},{"ruleId":"78","severity":1,"message":"98","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":44,"column":13,"nodeType":"95","endLine":44,"endColumn":59},{"ruleId":"78","severity":1,"message":"98","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'PostCreate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["102"],"'useReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchPosts]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchUsers]",{"range":"109","text":"110"},[703,705],"[fetchPosts]",[1075,1077],"[fetchUsers]"]